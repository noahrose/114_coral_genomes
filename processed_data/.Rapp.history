table(datn[,6])
table(datn[,7])
table(datn[,8])
table(datn[,9])
apply(datn,2,table)
dim(apply(datn,2,table))
i=1
which.max(datn[,i])
which.max(table(datn[,i]))
(table(datn[,i]))
tabulate(datn[,i])
(table(dat[,i]))
curr<-(table(dat[,i]))
asHet<-matrix(0,nrow=nrow(dat)/2,ncol=ncol(dat))
curr<-(table(dat[,i]))
names(curr)
names(curr)[which.max(curr)]
dat[names(curr)[which.max(curr)]]
dat[names(curr)[which.max(curr)],i]
names(curr)[which.max(curr)]
dat[,i]==names(curr)[which.max(curr)]
curr<-(table(dat[,i]))
dat[dat[,i]==names(curr)[which.max(curr)],i]<-0
dat[dat[,i]!=names(curr)[which.max(curr)],i]<-1
dat
curr<-(table(dat[,i]))
dat<-(as.matrix(read.csv('~/Downloads/whabba.txt',header=F)))
currvec<-rep(0,nrow(dat))
dat<-(as.matrix(read.csv('~/Downloads/whabba.txt',header=F)))
dim(apply(datn,2,table))
dim(apply(dat,2,table))
asHet<-matrix(0,nrow=nrow(dat)/2,ncol=ncol(dat))
curr<-(table(dat[,i]))
currvec<-rep(0,nrow(dat))
dat[dat[,i]!=names(curr)[which.max(curr)],i]<-1
dat<-(as.matrix(read.csv('~/Downloads/whabba.txt',header=F)))#
dim(apply(dat,2,table))#
asHet<-matrix(0,nrow=nrow(dat)/2,ncol=ncol(dat))
dat[,i]!=names(curr)[which.max(curr)]
which.max(curr)
names(curr)
(names(curr)[which.max(curr)])
dat[,i]!=(names(curr)[which.max(curr)])
currvec[dat[,i]!=(names(curr)[which.max(curr)])]<-1
currvec
currvec[seq(1,length(currvec),2)]+currvec[seq(2,length(currvec),2)]
asHet[,i]<-currvec[seq(1,length(currvec),2)]+currvec[seq(2,length(currvec),2)]
asHet<-matrix(0,nrow=nrow(dat)/2,ncol=ncol(dat))#
for(i in 1:ncol(dat)){#
	curr<-(table(dat[,i]))#
	currvec<-rep(0,nrow(dat))#
	currvec[dat[,i]!=(names(curr)[which.max(curr)])]<-1#
	asHet[,i]<-currvec[seq(1,length(currvec),2)]+currvec[seq(2,length(currvec),2)]#
}
asHet
image(asHet)
read.delim('~/Downloads/labs.txt')
read.delim('~/Downloads/labs.txt',header=F)
rownames(asHet)<-read.delim('~/Downloads/labs.txt',header=F)
read.delim('~/Downloads/labs.txt',header=F)
rownames(asHet)<-read.delim('~/Downloads/labs.txt',header=F)[,1]
asHet
rownames(asHet)<-read.delim('~/Downloads/labs.txt',header=F)[,1]
asHet
asHet<-asHet[order(rownames(asHet)),]
asHet
image(asHet)
image(t(asHet))
asHet
heatmap(asHet)
heatmap(asHet,Rowv=NA)
heatmap(asHet,Colv=NA)
heatmap(asHet,Colv=NA,Rowv=NA)
heatmap(asHet,Colv=NA,Rowv=NA,scale='none')
library(glmmTMB)#
library(maps)#
library(raster)#
library(plotrix)#
library(emmeans)#
library(boot)#
library(MonoPoly)#
#
#setwd('path_to_your_repository')#
#
dat<-read.csv('data/combined_africa_olfac.csv')#
dat<-dat[!is.na(dat$N),]#
dat$pref<-(dat$N_Hu-dat$N_Alt)/(dat$N_Hu+dat$N_Alt)#
dat$NR<-(dat$N_Hu+dat$N_Alt)#
dat$N0<-dat$N-dat$NR#
dat$resp<-dat$NR/dat$N#
dat$Day<-factor(dat$Day)#
dat$Population<-factor(dat$Population,levels=c("ORL",'T51',"NGO","THI","MIN","KED","PKT","BTT","OGD","OHI","KUM","KIN","BOA","AWK","LBV","LPV","LPF","FCV","ENT","ZIK","KAK","SYL","VMB","RAB","KBO","KWA","SHM","GND","ABK"))#
#
gm0<-glmmTMB(cbind(N_Hu,N_Alt)~(1|Day),data=dat,family='betabinomial')#
gm<-glmmTMB(cbind(N_Hu,N_Alt)~Population+(1|Colony)+(1|Day),data=dat,family='betabinomial')#
#test glm with population differences in behavior vs null model of only day-to-day variation#
anova(gm,gm0)#
#
#extract coefficients and confidence intervals#
e<-emmeans(gm,'Population')#
conf<-confint(e,type='response')#
fitted<-2*conf$prob-1#
upf<-2*conf$lower.CL-1#
dwnf<-2*conf$upper.CL-1#
names(fitted)<-conf$Population#
conf$pref<-fitted#
#
################################################################
pdf(width=8,height=4,file='Day_Effect.pdf',useDingbats=F)#
par(mar=c(4,3,2,1),tck=-0.01,mgp=c(1.2,.2,0),mfrow=c(2,1))#
coords=c(1,2,5,6,7,8,9,10,13,14,17,18,19,22,25,26,27,28,31,32,35,36,37,38,39,40,41,42,43)#
cols<-rainbow(29)[as.numeric(dat$Pop)]#
pchs<-as.numeric(dat$Day)#
plot(jitter(coords[as.numeric(dat$Pop)],1),dat$pref,cex=0.5,axes=F,ylab='Preference index',pch=pchs,col=cols,xlab='',ylim=c(-1,1))#
axis(1,las=2,at=coords,labels=c('ORL','T51',popmeta$code),cex.axis=0.7,lwd=0.5)#
axis(1,at=c(7.5,13.5,18,22,26.5,31.5,39),line=2,labels=c('Senegal','Burkina Faso','Ghana','Nigeria','Gabon','Uganda','Kenya'),cex.axis=0.7)#
axis(2,at=c(-1,0,1),lwd=0.5)#
#
plot(jitter(as.numeric(dat$Day)),dat$pref,cex=0.5,axes=F,ylab='Preference index',xlab='Trial day',col=cols,pch=pchs)#
axis(1,at=1:14,las=1,lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
dev.off()#
###############################################################
#
#metadata for populations#
popmeta<-read.csv('data/Colonies_kernel.csv',stringsAsFactors=F)#
popmeta<-popmeta[match(names(fitted)[3:length(fitted)],popmeta$code),]#
popmeta$pref<-fitted[3:length(fitted)]#
popmeta$prob<-conf$prob[-c(1,2)]#
popmeta$densCex<-log10(popmeta$dens20+10)/1.7#
conf$densCex<-c(1,1,popmeta$densCex)#
popmeta$bio15col<- c(colorRampPalette(c('darkgreen','yellow','white'))(262)[popmeta$bio15_20])#
conf$bio15col<-c('grey','grey',popmeta$bio15col)#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
conf$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[conf$prob*100]#
write.table(popmeta,file='data/colonies_fitted.txt',sep='\t',quote=F)#
write.table(conf,file='data/colonies_conf.txt',sep='\t',quote=F)#
#
#PCA on bioclim variables#
bios<-grep('bio.bio',names(popmeta))#
pc.out<-prcomp(popmeta[,bios],scale=T)#
popmeta$PC1<-pc.out$x[,1]#
popmeta$PC2<-pc.out$x[,2]#
popmeta$PC3<-pc.out$x[,3]#
#
#######################################################################
#
fits<-matrix(nrow=17,ncol=6)#
for(i in 11:27){#
	print(colnames(popmeta[i]))#
	print(colnames(popmeta)[i+17])#
	print(colnames(popmeta)[i+34])#
	lm.out_latlon<-lm(logit(prob)~popmeta[,i]+Latitude*Longitude,data=popmeta)#
	lm.out_lin<-lm(logit(prob)~popmeta[,i]+popmeta[,i+17],data=popmeta)#
	mp2<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=2,a=0,b=261)#
	lm.out_mp2<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp2)),data=popmeta)#
	mp3<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=3,a=0,b=261)	#
	lm.out_mp3<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp3)),data=popmeta)#
	mp4<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=4,a=0,b=261)#
	lm.out_mp4<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp4)),data=popmeta)#
	lm.out_full<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp3))+popmeta[,i+34],data=popmeta)#
#
	fits[i-10,1]=AIC(lm.out_lin)#
	fits[i-10,2]=10-2*logLik(lm.out_mp2)#
	fits[i-10,3]=12-2*logLik(lm.out_mp3)#
	fits[i-10,4]=14-2*logLik(lm.out_mp4)#
	fits[i-10,5]=AIC(lm.out_latlon)#
	fits[i-10,6]=16-2*logLik(lm.out_full)#
}#
#
lm.out_latlon0<-lm(logit(prob)~Latitude*Longitude,data=popmeta)#
bufs<-c(seq(5,50,5),seq(60,100,10),200,300)#
pdf(file='Model_selection.pdf',width=4,height=4,useDingbats=F)#
cols=rainbow(4,v=0.8)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(3,3,1,1))#
plot(bufs,fits[,1],type='l',ylim=c(min(fits),max(fits)),lwd=2,bty='l',axes=F,xlab='Radius of adaptation (km)',ylab='AIC',col=cols[1])#
axis(1,at=bufs,las=2,labels=F,tck=-0.01,lwd=0.5)#
axis(1,at=c(10,50,100,200,300),tck=0,lwd=0)#
axis(2,lwd=0.5)#
lines(bufs,fits[,3],type='l',col=cols[3],lwd=2)#
lines(bufs,fits[,5],type='l',col='darkgrey',lwd=2)#
lines(bufs,fits[,6],type='l',col=cols[4],lwd=2)#
abline(v=20,lty=2)#
abline(h=AIC(lm.out_latlon0),col='lightgrey',lwd=2)#
legend('bottomright',legend=c('Lat x Long','Lat x Long + pop. dens.','Linear bio15 + pop. dens.','3rd degree bio15 + pop. dens.','3rd degree bio15 + linear bio18 + pop. dens.'),fill=c('lightgrey','darkgrey',cols[c(1,3,4)]),bty='n',cex=.7)#
dev.off()#
#
bufs[which.min(fits[,5])]#
lm.out_latlon<-lm(logit(prob)~popmeta[,'dens45']+Latitude*Longitude,data=popmeta)#
summary(lm.out_latlon)#
anova(lm(logit(prob)~popmeta[,'dens20']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens25']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens30']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens35']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens40']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens45']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens50']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
#
#########################################################################
#
fits2<-matrix(nrow=22,ncol=4)#
curr=1#
for(i in c(bios,grep('PC',colnames(popmeta)))){#
	currbio=popmeta[,i]#
	print(colnames(popmeta)[i])#
	lm.out_lin<-lm(logit(prob)~popmeta[,i]+dens20,data=popmeta)#
	mp2<-monpol(logit(prob)~currbio,data=popmeta,degree=2,a=min(currbio),b=max(currbio))#
	mp3<-monpol(logit(prob)~currbio,data=popmeta,degree=3,a=min(currbio),b=max(currbio))#
	mp4<-monpol(logit(prob)~currbio,data=popmeta,degree=4,a=min(currbio),b=max(currbio))#
	lm.out_mp2<-lm(logit(prob)~dens20+offset(fitted(mp2)),data=popmeta)#
	lm.out_mp3<-lm(logit(prob)~dens20+offset(fitted(mp3)),data=popmeta)#
	lm.out_mp4<-lm(logit(prob)~dens20+offset(fitted(mp4)),data=popmeta)#
	fits2[curr,1]=AIC(lm.out_lin)#
	fits2[curr,2]=10-2*logLik(lm.out_mp2)#
	fits2[curr,3]=12-2*logLik(lm.out_mp3)#
	fits2[curr,4]=14-2*logLik(lm.out_mp4)#
	curr=curr+1#
}#
#
pdf(file='Bioclim_selection.pdf',width=4,height=3,useDingbats=F)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(4,3,1,1))#
plot(fits2[,1],col=cols[1],axes=F,xlab='',ylab='AIC',xlim=c(0,23),ylim=c(20,85))#
points(fits2[,2],col=cols[2])#
points(fits2[,3],col=cols[3])#
points(fits2[,4],col=cols[4])#
points(23,fits[4,5],col=cols[1])#
ax<-c(paste('bio',1:19,sep=''),'PC1','PC2','PC3','LatLong')#
axis(1,at=1:23,labels=ax,las=2,cex.axis=0.8,lwd=0.5)#
axis(2,lwd=0.5)#
mtext('Bioclimate variable',side=1,line=3)#
legend('bottomleft',legend=c('Lat x Long + pop. dens.','Linear + pop. dens.','2nd degree + pop. dens.','3rd degree + pop. dens.','4th degree + pop. dens.'),fill=c('grey',cols),bty='n',cex=.7)#
dev.off()#
#
####################################################################################
#
fits3<-matrix(nrow=18,ncol=4)#
curr=1#
mp15<-monpol(logit(prob)~bio.bio15,data=popmeta,degree=3,a=0,b=261)#
resids<-resid(lm(logit(prob)~dens20+offset(fitted(mp15)),data=popmeta))#
for(i in paste('bio.bio',c(1:14,16:19),sep='')){#
	currbio=resid(lm(popmeta[,i]~offset(fitted(mp15))+popmeta$dens20))#
	lm.out_lin<-lm(logit(prob)~currbio+offset(fitted(mp15))+dens20,data=popmeta)#
	mp2<-monpol(resids~currbio,data=popmeta,degree=2,a=min(currbio),b=max(currbio))#
	mp3<-monpol(resids~currbio,data=popmeta,degree=3,a=min(currbio),b=max(currbio))#
	mp4<-monpol(resids~currbio,data=popmeta,degree=4,a=min(currbio),b=max(currbio))#
	lm.out_mp2<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp2)),data=popmeta)#
	lm.out_mp3<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp3)),data=popmeta)#
	lm.out_mp4<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp4)),data=popmeta)#
	fits3[curr,1]=14-2*logLik(lm.out_lin)#
	fits3[curr,2]=16-2*logLik(lm.out_mp2)#
	fits3[curr,3]=18-2*logLik(lm.out_mp3)#
	fits3[curr,4]=20-2*logLik(lm.out_mp4)#
	curr=curr+1#
}#
inds<-c(1:14,16:19)#
pdf(file='Bioclim18_selection.pdf',width=4,height=3,useDingbats=F)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(4,3,1,1))#
plot(inds,fits3[,1],ylim=c(30,50),col=cols[1],axes=F,xlab='',ylab='AIC')#
points(inds,fits3[,2],col=cols[2])#
points(inds,fits3[,3],col=cols[3])#
points(inds,fits3[,4],col=cols[4])#
abline(h=min(fits2),lty=2)#
ax<-c(paste('bio',inds,sep=''))#
axis(1,at=inds,labels=ax,las=2,cex.axis=0.8,lwd=0.5)#
axis(2,lwd=0.5)#
dev.off()#
#
###############################################################################
#ANOVA analysis of models#
full18<-(lm(logit(prob)~fitted(mp15)+bio.bio18+dens20,data=popmeta))#
full0<-(lm(logit(prob)~Latitude*Longitude+dens20,data=popmeta))#
full00<-(lm(logit(prob)~Latitude*Longitude,data=popmeta))#
stot<-sum(anova(full18)[,'Sum Sq'])#
ss1<-anova(full18)[1,'Sum Sq']#
ss3<-anova(full18)[2,'Sum Sq']#
ss2<-anova(full18)[3,'Sum Sq']#
#
drop15<-(lm(logit(prob)~dens20+bio.bio18,data=popmeta))#
drop20<-(lm(logit(prob)~(fitted(mp15))+bio.bio18,data=popmeta))#
drop18<-(lm(logit(prob)~(fitted(mp15))+dens20,data=popmeta))#
dropclim<-(lm(logit(prob)~dens20,data=popmeta))#
#
sink(file='additional_bioclim.log')#
print('pop density 20km LRT w Lat Long')#
anova(lm(logit(prob)~Latitude*Longitude+dens20,data=popmeta),lm(logit(prob)~Latitude*Longitude,data=popmeta))#
print('pop density 45km LRT w Lat Long')#
anova(lm(logit(prob)~Latitude*Longitude+dens45,data=popmeta),lm(logit(prob)~Latitude*Longitude,data=popmeta))#
lm.out<-step(lm(logit(prob)~dens20+(fitted(mp15))+bio.bio18+bio.bio9+bio.bio12,data=popmeta))#
summary(lm.out)#
#
drop1(full18)#
pchisq(2*logLik(full18)-2*logLik(drop15),df=3,lower=F)#
pchisq(2*logLik(full18)-2*logLik(drop18),df=1,lower=F)#
pchisq(2*logLik(full18)-2*logLik(drop20),df=1,lower=F)#
print('LRT climate')#
pchisq(2*logLik(full18)-2*logLik(dropclim),df=4,lower=F)#
#
print('eta sq bio15')#
ss1/stot#
print('eta sq dens20')#
ss2/stot#
print('eta sq bio18')#
ss3/stot#
#
coefs<-c(coef(full18)[1]+coef(mp15)[1],coef(full18)[2]*coef(mp15)[2:4],coef(full18)[3:4])#
names(coefs)<-c('Intercept','bio15','bio15_2','bio15_3','bio18','popdensity_20km')#
print("Fitted coefficients for bio15, bio18 and density model")#
coefs#
#
popmeta$dryseason<-(coefs[1]+coefs[2]*popmeta$bio.bio15+coefs[3]*popmeta$bio.bio15^2+coefs[4]*popmeta$bio.bio15^3+coefs[5]*popmeta$bio.bio18)#
aov.out<-anova(lm(logit(prob)~dryseason+dens20,data=popmeta))#
#
print('eta sq dry season')#
aov.out[1,'Sum Sq']/sum(aov.out[,'Sum Sq'])#
print('eta sq dens20')#
aov.out[2,'Sum Sq']/sum(aov.out[,'Sum Sq'])#
#
sink()#
###############################################################
#
########################################################################################
#
climpred<-rowSums(predict(full18,type='terms',terms=c('fitted(mp15)','bio.bio18')))#
denspred<-predict(full18,type='terms',terms=c('dens20'))#
dens20resid<-resid(lm(logit(prob)~denspred,data=popmeta))+logit(mean(popmeta$prob))#
bioresid<-resid(lm(logit(prob)~climpred,data=popmeta))+logit(mean(popmeta$prob))#
lm.dens<-lm(bioresid~dens20,data=popmeta)#
lm.bio<-lm(dens20resid~dryseason,data=popmeta)#
lm.bio18<-lm(dens20resid~bio.bio18,data=popmeta)#
lm.bio15.2<-lm(dens20resid[!popmeta$code%in%c('NGO','THI')]~bio.bio15,data=popmeta[!popmeta$code%in%c('NGO','THI'),])#
lm.bio18.2<-lm(dens20resid[!popmeta$code%in%c('NGO','THI')]~bio.bio18,data=popmeta[!popmeta$code%in%c('NGO','THI'),])#
pdf(file='Climate_pop_behavior.pdf',width=6,height=3,useDingbats=F)#
par(mfrow=c(1,2),mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,3,1,1))#
plot((popmeta$dryseason),2*inv.logit(dens20resid)-1,ylim=c(-1,1),pch=21,bg=popmeta$bio15col,xlab='Dry season intensity index',ylab='Preference index (adj. for pop.)',cex=popmeta$densCex,axes=F,xlim=c(-2.3,1),lwd=0.25)#
lines(seq(-3,1,0.1),2*inv.logit(predict(lm.bio,data.frame(dryseason=seq(-3,1,0.1))))-1,lty=2)#
# abline(0,1)#
summary(lm(logit(popmeta$prob)~fitted(lm.bio)))#
text(-1.6,.8,labels=expression(italic(eta^2) == 0.65))#
axis(1,at=c(-2,-1,0,1),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
plot(popmeta$dens20,2*inv.logit(bioresid)-1,ylim=c(-1,1),xlim=c(0,2500),pch=21,bg=popmeta$bio15col,xlab= expression("Population density km"^-2),ylab='Preference index (adj. for climate)',cex=popmeta$densCex,axes=F,lwd=0.25)#
lines(seq(0,3000,30),2*inv.logit(predict(lm.dens,data.frame(dens20=seq(0,3000,30))))-1,lty=2)#
summary(lm.dens)#
text(500,.8,labels=expression(italic(eta^2) == 0.18))#
axis(1,at=c(0,1000,2000),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
dev.off()#
#
pdf(file='bioclim_pop_behavior.pdf',width=2,height=3,useDingbats=F)#
par(mfrow=c(2,1),mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,3,1,1))#
plot(popmeta$bio.bio15,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. seasonality',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(50,100,150),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,200),2*inv.logit(predict(mp15,data.frame(bio.bio15=seq(0,200))))-1,lty=1)#
lines(seq(0,200),2*inv.logit(predict(lm.bio15.2,data.frame(bio.bio15=seq(0,200))))-1,lty=1,col='grey')#
#
plot(popmeta$bio.bio18,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. of warmest Q',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(0,1000,2000),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18,data.frame(bio.bio18=seq(0,5000))))-1,lty=1)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18.2,data.frame(bio.bio18=seq(0,5000))))-1,lty=1,col='grey')#
#
dev.off()#
pdf(file='Climate_bioclim_pop_behavior_combined.pdf',width=8,height=2.5,useDingbats=F)#
par(mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,4,1,1))#
layout(rbind(c(1,2,3),c(1,2,4)),widths=c(3,3,2))#
plot(popmeta$dens20,2*inv.logit(bioresid)-1,ylim=c(-1,1),xlim=c(0,2500),pch=21,bg=popmeta$bio15col,xlab= expression("Population density km"^-2),ylab='Preference index (adj. for climate)',cex=popmeta$densCex,axes=F,lwd=0.25)#
lines(seq(0,3000,30),2*inv.logit(predict(lm.dens,data.frame(dens20=seq(0,3000,30))))-1,lty=2)#
summary(lm.dens)#
text(500,.8,labels=expression(italic(eta^2) == 0.18))#
axis(1,at=c(0,500,1500,2500),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
box(bty='l',lwd=0.5)#
plot((popmeta$dryseason),2*inv.logit(dens20resid)-1,ylim=c(-1,1),pch=21,bg=popmeta$bio15col,xlab='Dry season intensity index',ylab='Preference index (adj. for pop.)',cex=popmeta$densCex,axes=F,xlim=c(-2.3,1),lwd=0.25)#
lines(seq(-3,1,0.1),2*inv.logit(predict(lm.bio,data.frame(dryseason=seq(-3,1,0.1))))-1,lty=2)#
# abline(0,1)#
summary(lm(logit(popmeta$prob)~fitted(lm.bio)))#
text(-1.6,.8,labels=expression(italic(eta^2) == 0.65))#
axis(1,at=c(-2,-1,0,1),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
box(bty='l',lwd=0.5)#
#
par(mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,5,1,1))#
#
plot(popmeta$bio.bio15,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. seasonality',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(50,100,150),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,200),2*inv.logit(predict(mp15,data.frame(bio.bio15=seq(0,200))))-1,lty=1)#
lines(seq(0,200),2*inv.logit(predict(lm.bio15.2,data.frame(bio.bio15=seq(0,200))))-1,lty=1,col='grey')#
box(bty='l',lwd=0.5)#
#
plot(popmeta$bio.bio18,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. of warmest Q',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1),xlim=c(0,900))#
axis(1,at=c(0,400,800),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18,data.frame(bio.bio18=seq(0,5000))))-1,lty=1)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18.2,data.frame(bio.bio18=seq(0,5000))))-1,lty=1,col='grey')#
box(bty='l',lwd=0.5)#
#
dev.off()
setwd('~/Dropbox/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff')
library(glmmTMB)#
library(maps)#
library(raster)#
library(plotrix)#
library(emmeans)#
library(boot)#
library(MonoPoly)#
#
#setwd('path_to_your_repository')#
#
dat<-read.csv('data/combined_africa_olfac.csv')#
dat<-dat[!is.na(dat$N),]#
dat$pref<-(dat$N_Hu-dat$N_Alt)/(dat$N_Hu+dat$N_Alt)#
dat$NR<-(dat$N_Hu+dat$N_Alt)#
dat$N0<-dat$N-dat$NR#
dat$resp<-dat$NR/dat$N#
dat$Day<-factor(dat$Day)#
dat$Population<-factor(dat$Population,levels=c("ORL",'T51',"NGO","THI","MIN","KED","PKT","BTT","OGD","OHI","KUM","KIN","BOA","AWK","LBV","LPV","LPF","FCV","ENT","ZIK","KAK","SYL","VMB","RAB","KBO","KWA","SHM","GND","ABK"))#
#
gm0<-glmmTMB(cbind(N_Hu,N_Alt)~(1|Day),data=dat,family='betabinomial')#
gm<-glmmTMB(cbind(N_Hu,N_Alt)~Population+(1|Colony)+(1|Day),data=dat,family='betabinomial')#
#test glm with population differences in behavior vs null model of only day-to-day variation#
anova(gm,gm0)#
#
#extract coefficients and confidence intervals#
e<-emmeans(gm,'Population')#
conf<-confint(e,type='response')#
fitted<-2*conf$prob-1#
upf<-2*conf$lower.CL-1#
dwnf<-2*conf$upper.CL-1#
names(fitted)<-conf$Population#
conf$pref<-fitted#
#
################################################################
pdf(width=8,height=4,file='Day_Effect.pdf',useDingbats=F)#
par(mar=c(4,3,2,1),tck=-0.01,mgp=c(1.2,.2,0),mfrow=c(2,1))#
coords=c(1,2,5,6,7,8,9,10,13,14,17,18,19,22,25,26,27,28,31,32,35,36,37,38,39,40,41,42,43)#
cols<-rainbow(29)[as.numeric(dat$Pop)]#
pchs<-as.numeric(dat$Day)#
plot(jitter(coords[as.numeric(dat$Pop)],1),dat$pref,cex=0.5,axes=F,ylab='Preference index',pch=pchs,col=cols,xlab='',ylim=c(-1,1))#
axis(1,las=2,at=coords,labels=c('ORL','T51',popmeta$code),cex.axis=0.7,lwd=0.5)#
axis(1,at=c(7.5,13.5,18,22,26.5,31.5,39),line=2,labels=c('Senegal','Burkina Faso','Ghana','Nigeria','Gabon','Uganda','Kenya'),cex.axis=0.7)#
axis(2,at=c(-1,0,1),lwd=0.5)#
#
plot(jitter(as.numeric(dat$Day)),dat$pref,cex=0.5,axes=F,ylab='Preference index',xlab='Trial day',col=cols,pch=pchs)#
axis(1,at=1:14,las=1,lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
dev.off()#
###############################################################
#
#metadata for populations#
popmeta<-read.csv('data/Colonies_kernel.csv',stringsAsFactors=F)#
popmeta<-popmeta[match(names(fitted)[3:length(fitted)],popmeta$code),]#
popmeta$pref<-fitted[3:length(fitted)]#
popmeta$prob<-conf$prob[-c(1,2)]#
popmeta$densCex<-log10(popmeta$dens20+10)/1.7#
conf$densCex<-c(1,1,popmeta$densCex)#
popmeta$bio15col<- c(colorRampPalette(c('darkgreen','yellow','white'))(262)[popmeta$bio15_20])#
conf$bio15col<-c('grey','grey',popmeta$bio15col)#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
conf$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[conf$prob*100]#
write.table(popmeta,file='data/colonies_fitted.txt',sep='\t',quote=F)#
write.table(conf,file='data/colonies_conf.txt',sep='\t',quote=F)#
#
#PCA on bioclim variables#
bios<-grep('bio.bio',names(popmeta))#
pc.out<-prcomp(popmeta[,bios],scale=T)#
popmeta$PC1<-pc.out$x[,1]#
popmeta$PC2<-pc.out$x[,2]#
popmeta$PC3<-pc.out$x[,3]#
#
#######################################################################
#
fits<-matrix(nrow=17,ncol=6)#
for(i in 11:27){#
	print(colnames(popmeta[i]))#
	print(colnames(popmeta)[i+17])#
	print(colnames(popmeta)[i+34])#
	lm.out_latlon<-lm(logit(prob)~popmeta[,i]+Latitude*Longitude,data=popmeta)#
	lm.out_lin<-lm(logit(prob)~popmeta[,i]+popmeta[,i+17],data=popmeta)#
	mp2<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=2,a=0,b=261)#
	lm.out_mp2<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp2)),data=popmeta)#
	mp3<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=3,a=0,b=261)	#
	lm.out_mp3<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp3)),data=popmeta)#
	mp4<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=4,a=0,b=261)#
	lm.out_mp4<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp4)),data=popmeta)#
	lm.out_full<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp3))+popmeta[,i+34],data=popmeta)#
#
	fits[i-10,1]=AIC(lm.out_lin)#
	fits[i-10,2]=10-2*logLik(lm.out_mp2)#
	fits[i-10,3]=12-2*logLik(lm.out_mp3)#
	fits[i-10,4]=14-2*logLik(lm.out_mp4)#
	fits[i-10,5]=AIC(lm.out_latlon)#
	fits[i-10,6]=16-2*logLik(lm.out_full)#
}#
#
lm.out_latlon0<-lm(logit(prob)~Latitude*Longitude,data=popmeta)#
bufs<-c(seq(5,50,5),seq(60,100,10),200,300)#
pdf(file='Model_selection.pdf',width=4,height=4,useDingbats=F)#
cols=rainbow(4,v=0.8)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(3,3,1,1))#
plot(bufs,fits[,1],type='l',ylim=c(min(fits),max(fits)),lwd=2,bty='l',axes=F,xlab='Radius of adaptation (km)',ylab='AIC',col=cols[1])#
axis(1,at=bufs,las=2,labels=F,tck=-0.01,lwd=0.5)#
axis(1,at=c(10,50,100,200,300),tck=0,lwd=0)#
axis(2,lwd=0.5)#
lines(bufs,fits[,3],type='l',col=cols[3],lwd=2)#
lines(bufs,fits[,5],type='l',col='darkgrey',lwd=2)#
lines(bufs,fits[,6],type='l',col=cols[4],lwd=2)#
abline(v=20,lty=2)#
abline(h=AIC(lm.out_latlon0),col='lightgrey',lwd=2)#
legend('bottomright',legend=c('Lat x Long','Lat x Long + pop. dens.','Linear bio15 + pop. dens.','3rd degree bio15 + pop. dens.','3rd degree bio15 + linear bio18 + pop. dens.'),fill=c('lightgrey','darkgrey',cols[c(1,3,4)]),bty='n',cex=.7)#
dev.off()#
#
bufs[which.min(fits[,5])]#
lm.out_latlon<-lm(logit(prob)~popmeta[,'dens45']+Latitude*Longitude,data=popmeta)#
summary(lm.out_latlon)#
anova(lm(logit(prob)~popmeta[,'dens20']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens25']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens30']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens35']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens40']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens45']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens50']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
#
#########################################################################
#
fits2<-matrix(nrow=22,ncol=4)#
curr=1#
for(i in c(bios,grep('PC',colnames(popmeta)))){#
	currbio=popmeta[,i]#
	print(colnames(popmeta)[i])#
	lm.out_lin<-lm(logit(prob)~popmeta[,i]+dens20,data=popmeta)#
	mp2<-monpol(logit(prob)~currbio,data=popmeta,degree=2,a=min(currbio),b=max(currbio))#
	mp3<-monpol(logit(prob)~currbio,data=popmeta,degree=3,a=min(currbio),b=max(currbio))#
	mp4<-monpol(logit(prob)~currbio,data=popmeta,degree=4,a=min(currbio),b=max(currbio))#
	lm.out_mp2<-lm(logit(prob)~dens20+offset(fitted(mp2)),data=popmeta)#
	lm.out_mp3<-lm(logit(prob)~dens20+offset(fitted(mp3)),data=popmeta)#
	lm.out_mp4<-lm(logit(prob)~dens20+offset(fitted(mp4)),data=popmeta)#
	fits2[curr,1]=AIC(lm.out_lin)#
	fits2[curr,2]=10-2*logLik(lm.out_mp2)#
	fits2[curr,3]=12-2*logLik(lm.out_mp3)#
	fits2[curr,4]=14-2*logLik(lm.out_mp4)#
	curr=curr+1#
}#
#
pdf(file='Bioclim_selection.pdf',width=4,height=3,useDingbats=F)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(4,3,1,1))#
plot(fits2[,1],col=cols[1],axes=F,xlab='',ylab='AIC',xlim=c(0,23),ylim=c(20,85))#
points(fits2[,2],col=cols[2])#
points(fits2[,3],col=cols[3])#
points(fits2[,4],col=cols[4])#
points(23,fits[4,5],col=cols[1])#
ax<-c(paste('bio',1:19,sep=''),'PC1','PC2','PC3','LatLong')#
axis(1,at=1:23,labels=ax,las=2,cex.axis=0.8,lwd=0.5)#
axis(2,lwd=0.5)#
mtext('Bioclimate variable',side=1,line=3)#
legend('bottomleft',legend=c('Lat x Long + pop. dens.','Linear + pop. dens.','2nd degree + pop. dens.','3rd degree + pop. dens.','4th degree + pop. dens.'),fill=c('grey',cols),bty='n',cex=.7)#
dev.off()#
#
####################################################################################
#
fits3<-matrix(nrow=18,ncol=4)#
curr=1#
mp15<-monpol(logit(prob)~bio.bio15,data=popmeta,degree=3,a=0,b=261)#
resids<-resid(lm(logit(prob)~dens20+offset(fitted(mp15)),data=popmeta))#
for(i in paste('bio.bio',c(1:14,16:19),sep='')){#
	currbio=resid(lm(popmeta[,i]~offset(fitted(mp15))+popmeta$dens20))#
	lm.out_lin<-lm(logit(prob)~currbio+offset(fitted(mp15))+dens20,data=popmeta)#
	mp2<-monpol(resids~currbio,data=popmeta,degree=2,a=min(currbio),b=max(currbio))#
	mp3<-monpol(resids~currbio,data=popmeta,degree=3,a=min(currbio),b=max(currbio))#
	mp4<-monpol(resids~currbio,data=popmeta,degree=4,a=min(currbio),b=max(currbio))#
	lm.out_mp2<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp2)),data=popmeta)#
	lm.out_mp3<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp3)),data=popmeta)#
	lm.out_mp4<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp4)),data=popmeta)#
	fits3[curr,1]=14-2*logLik(lm.out_lin)#
	fits3[curr,2]=16-2*logLik(lm.out_mp2)#
	fits3[curr,3]=18-2*logLik(lm.out_mp3)#
	fits3[curr,4]=20-2*logLik(lm.out_mp4)#
	curr=curr+1#
}#
inds<-c(1:14,16:19)#
pdf(file='Bioclim18_selection.pdf',width=4,height=3,useDingbats=F)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(4,3,1,1))#
plot(inds,fits3[,1],ylim=c(30,50),col=cols[1],axes=F,xlab='',ylab='AIC')#
points(inds,fits3[,2],col=cols[2])#
points(inds,fits3[,3],col=cols[3])#
points(inds,fits3[,4],col=cols[4])#
abline(h=min(fits2),lty=2)#
ax<-c(paste('bio',inds,sep=''))#
axis(1,at=inds,labels=ax,las=2,cex.axis=0.8,lwd=0.5)#
axis(2,lwd=0.5)#
dev.off()#
#
###############################################################################
#ANOVA analysis of models#
full18<-(lm(logit(prob)~fitted(mp15)+bio.bio18+dens20,data=popmeta))#
full0<-(lm(logit(prob)~Latitude*Longitude+dens20,data=popmeta))#
full00<-(lm(logit(prob)~Latitude*Longitude,data=popmeta))#
stot<-sum(anova(full18)[,'Sum Sq'])#
ss1<-anova(full18)[1,'Sum Sq']#
ss3<-anova(full18)[2,'Sum Sq']#
ss2<-anova(full18)[3,'Sum Sq']#
#
drop15<-(lm(logit(prob)~dens20+bio.bio18,data=popmeta))#
drop20<-(lm(logit(prob)~(fitted(mp15))+bio.bio18,data=popmeta))#
drop18<-(lm(logit(prob)~(fitted(mp15))+dens20,data=popmeta))#
dropclim<-(lm(logit(prob)~dens20,data=popmeta))#
#
sink(file='additional_bioclim.log')#
print('pop density 20km LRT w Lat Long')#
anova(lm(logit(prob)~Latitude*Longitude+dens20,data=popmeta),lm(logit(prob)~Latitude*Longitude,data=popmeta))#
print('pop density 45km LRT w Lat Long')#
anova(lm(logit(prob)~Latitude*Longitude+dens45,data=popmeta),lm(logit(prob)~Latitude*Longitude,data=popmeta))#
lm.out<-step(lm(logit(prob)~dens20+(fitted(mp15))+bio.bio18+bio.bio9+bio.bio12,data=popmeta))#
summary(lm.out)#
#
drop1(full18)#
pchisq(2*logLik(full18)-2*logLik(drop15),df=3,lower=F)#
pchisq(2*logLik(full18)-2*logLik(drop18),df=1,lower=F)#
pchisq(2*logLik(full18)-2*logLik(drop20),df=1,lower=F)#
print('LRT climate')#
pchisq(2*logLik(full18)-2*logLik(dropclim),df=4,lower=F)#
#
print('eta sq bio15')#
ss1/stot#
print('eta sq dens20')#
ss2/stot#
print('eta sq bio18')#
ss3/stot#
#
coefs<-c(coef(full18)[1]+coef(mp15)[1],coef(full18)[2]*coef(mp15)[2:4],coef(full18)[3:4])#
names(coefs)<-c('Intercept','bio15','bio15_2','bio15_3','bio18','popdensity_20km')#
print("Fitted coefficients for bio15, bio18 and density model")#
coefs#
#
popmeta$dryseason<-(coefs[1]+coefs[2]*popmeta$bio.bio15+coefs[3]*popmeta$bio.bio15^2+coefs[4]*popmeta$bio.bio15^3+coefs[5]*popmeta$bio.bio18)#
aov.out<-anova(lm(logit(prob)~dryseason+dens20,data=popmeta))#
#
print('eta sq dry season')#
aov.out[1,'Sum Sq']/sum(aov.out[,'Sum Sq'])#
print('eta sq dens20')#
aov.out[2,'Sum Sq']/sum(aov.out[,'Sum Sq'])#
#
sink()#
###############################################################
#
########################################################################################
#
climpred<-rowSums(predict(full18,type='terms',terms=c('fitted(mp15)','bio.bio18')))#
denspred<-predict(full18,type='terms',terms=c('dens20'))#
dens20resid<-resid(lm(logit(prob)~denspred,data=popmeta))+logit(mean(popmeta$prob))#
bioresid<-resid(lm(logit(prob)~climpred,data=popmeta))+logit(mean(popmeta$prob))#
lm.dens<-lm(bioresid~dens20,data=popmeta)#
lm.bio<-lm(dens20resid~dryseason,data=popmeta)#
lm.bio18<-lm(dens20resid~bio.bio18,data=popmeta)#
lm.bio15.2<-lm(dens20resid[!popmeta$code%in%c('NGO','THI')]~bio.bio15,data=popmeta[!popmeta$code%in%c('NGO','THI'),])#
lm.bio18.2<-lm(dens20resid[!popmeta$code%in%c('NGO','THI')]~bio.bio18,data=popmeta[!popmeta$code%in%c('NGO','THI'),])#
pdf(file='Climate_pop_behavior.pdf',width=6,height=3,useDingbats=F)#
par(mfrow=c(1,2),mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,3,1,1))#
plot((popmeta$dryseason),2*inv.logit(dens20resid)-1,ylim=c(-1,1),pch=21,bg=popmeta$bio15col,xlab='Dry season intensity index',ylab='Preference index (adj. for pop.)',cex=popmeta$densCex,axes=F,xlim=c(-2.3,1),lwd=0.25)#
lines(seq(-3,1,0.1),2*inv.logit(predict(lm.bio,data.frame(dryseason=seq(-3,1,0.1))))-1,lty=2)#
# abline(0,1)#
summary(lm(logit(popmeta$prob)~fitted(lm.bio)))#
text(-1.6,.8,labels=expression(italic(eta^2) == 0.65))#
axis(1,at=c(-2,-1,0,1),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
plot(popmeta$dens20,2*inv.logit(bioresid)-1,ylim=c(-1,1),xlim=c(0,2500),pch=21,bg=popmeta$bio15col,xlab= expression("Population density km"^-2),ylab='Preference index (adj. for climate)',cex=popmeta$densCex,axes=F,lwd=0.25)#
lines(seq(0,3000,30),2*inv.logit(predict(lm.dens,data.frame(dens20=seq(0,3000,30))))-1,lty=2)#
summary(lm.dens)#
text(500,.8,labels=expression(italic(eta^2) == 0.18))#
axis(1,at=c(0,1000,2000),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
dev.off()#
#
pdf(file='bioclim_pop_behavior.pdf',width=2,height=3,useDingbats=F)#
par(mfrow=c(2,1),mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,3,1,1))#
plot(popmeta$bio.bio15,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. seasonality',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(50,100,150),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,200),2*inv.logit(predict(mp15,data.frame(bio.bio15=seq(0,200))))-1,lty=1)#
lines(seq(0,200),2*inv.logit(predict(lm.bio15.2,data.frame(bio.bio15=seq(0,200))))-1,lty=1,col='grey')#
#
plot(popmeta$bio.bio18,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. of warmest Q',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(0,1000,2000),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18,data.frame(bio.bio18=seq(0,5000))))-1,lty=1)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18.2,data.frame(bio.bio18=seq(0,5000))))-1,lty=1,col='grey')#
#
dev.off()#
pdf(file='Climate_bioclim_pop_behavior_combined.pdf',width=8,height=2.5,useDingbats=F)#
par(mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,4,1,1))#
layout(rbind(c(1,2,3),c(1,2,4)),widths=c(3,3,2))#
plot(popmeta$dens20,2*inv.logit(bioresid)-1,ylim=c(-1,1),xlim=c(0,2500),pch=21,bg=popmeta$bio15col,xlab= expression("Population density km"^-2),ylab='Preference index (adj. for climate)',cex=popmeta$densCex,axes=F,lwd=0.25)#
lines(seq(0,3000,30),2*inv.logit(predict(lm.dens,data.frame(dens20=seq(0,3000,30))))-1,lty=2)#
summary(lm.dens)#
text(500,.8,labels=expression(italic(eta^2) == 0.18))#
axis(1,at=c(0,500,1500,2500),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
box(bty='l',lwd=0.5)#
plot((popmeta$dryseason),2*inv.logit(dens20resid)-1,ylim=c(-1,1),pch=21,bg=popmeta$bio15col,xlab='Dry season intensity index',ylab='Preference index (adj. for pop.)',cex=popmeta$densCex,axes=F,xlim=c(-2.3,1),lwd=0.25)#
lines(seq(-3,1,0.1),2*inv.logit(predict(lm.bio,data.frame(dryseason=seq(-3,1,0.1))))-1,lty=2)#
# abline(0,1)#
summary(lm(logit(popmeta$prob)~fitted(lm.bio)))#
text(-1.6,.8,labels=expression(italic(eta^2) == 0.65))#
axis(1,at=c(-2,-1,0,1),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
box(bty='l',lwd=0.5)#
#
par(mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,5,1,1))#
#
plot(popmeta$bio.bio15,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. seasonality',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(50,100,150),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,200),2*inv.logit(predict(mp15,data.frame(bio.bio15=seq(0,200))))-1,lty=1)#
lines(seq(0,200),2*inv.logit(predict(lm.bio15.2,data.frame(bio.bio15=seq(0,200))))-1,lty=1,col='grey')#
box(bty='l',lwd=0.5)#
#
plot(popmeta$bio.bio18,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. of warmest Q',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1),xlim=c(0,900))#
axis(1,at=c(0,400,800),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18,data.frame(bio.bio18=seq(0,5000))))-1,lty=1)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18.2,data.frame(bio.bio18=seq(0,5000))))-1,lty=1,col='grey')#
box(bty='l',lwd=0.5)#
#
dev.off()
setwd('~/Dropbox/2019 Rose et al AaegVariationAfrica/aaeg_adaptation_human_hosts/R_scripts')
library(glmmTMB)#
library(maps)#
library(raster)#
library(plotrix)#
library(emmeans)#
library(boot)#
library(MonoPoly)#
#
#setwd('path_to_your_repository')#
#
dat<-read.csv('data/combined_africa_olfac.csv')#
dat<-dat[!is.na(dat$N),]#
dat$pref<-(dat$N_Hu-dat$N_Alt)/(dat$N_Hu+dat$N_Alt)#
dat$NR<-(dat$N_Hu+dat$N_Alt)#
dat$N0<-dat$N-dat$NR#
dat$resp<-dat$NR/dat$N#
dat$Day<-factor(dat$Day)#
dat$Population<-factor(dat$Population,levels=c("ORL",'T51',"NGO","THI","MIN","KED","PKT","BTT","OGD","OHI","KUM","KIN","BOA","AWK","LBV","LPV","LPF","FCV","ENT","ZIK","KAK","SYL","VMB","RAB","KBO","KWA","SHM","GND","ABK"))#
#
gm0<-glmmTMB(cbind(N_Hu,N_Alt)~(1|Day),data=dat,family='betabinomial')#
gm<-glmmTMB(cbind(N_Hu,N_Alt)~Population+(1|Colony)+(1|Day),data=dat,family='betabinomial')#
#test glm with population differences in behavior vs null model of only day-to-day variation#
anova(gm,gm0)#
#
#extract coefficients and confidence intervals#
e<-emmeans(gm,'Population')#
conf<-confint(e,type='response')#
fitted<-2*conf$prob-1#
upf<-2*conf$lower.CL-1#
dwnf<-2*conf$upper.CL-1#
names(fitted)<-conf$Population#
conf$pref<-fitted#
#
################################################################
pdf(width=8,height=4,file='Day_Effect.pdf',useDingbats=F)#
par(mar=c(4,3,2,1),tck=-0.01,mgp=c(1.2,.2,0),mfrow=c(2,1))#
coords=c(1,2,5,6,7,8,9,10,13,14,17,18,19,22,25,26,27,28,31,32,35,36,37,38,39,40,41,42,43)#
cols<-rainbow(29)[as.numeric(dat$Pop)]#
pchs<-as.numeric(dat$Day)#
plot(jitter(coords[as.numeric(dat$Pop)],1),dat$pref,cex=0.5,axes=F,ylab='Preference index',pch=pchs,col=cols,xlab='',ylim=c(-1,1))#
axis(1,las=2,at=coords,labels=c('ORL','T51',popmeta$code),cex.axis=0.7,lwd=0.5)#
axis(1,at=c(7.5,13.5,18,22,26.5,31.5,39),line=2,labels=c('Senegal','Burkina Faso','Ghana','Nigeria','Gabon','Uganda','Kenya'),cex.axis=0.7)#
axis(2,at=c(-1,0,1),lwd=0.5)#
#
plot(jitter(as.numeric(dat$Day)),dat$pref,cex=0.5,axes=F,ylab='Preference index',xlab='Trial day',col=cols,pch=pchs)#
axis(1,at=1:14,las=1,lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
dev.off()#
###############################################################
#
#metadata for populations#
popmeta<-read.csv('data/Colonies_kernel.csv',stringsAsFactors=F)#
popmeta<-popmeta[match(names(fitted)[3:length(fitted)],popmeta$code),]#
popmeta$pref<-fitted[3:length(fitted)]#
popmeta$prob<-conf$prob[-c(1,2)]#
popmeta$densCex<-log10(popmeta$dens20+10)/1.7#
conf$densCex<-c(1,1,popmeta$densCex)#
popmeta$bio15col<- c(colorRampPalette(c('darkgreen','yellow','white'))(262)[popmeta$bio15_20])#
conf$bio15col<-c('grey','grey',popmeta$bio15col)#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
conf$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[conf$prob*100]#
write.table(popmeta,file='data/colonies_fitted.txt',sep='\t',quote=F)#
write.table(conf,file='data/colonies_conf.txt',sep='\t',quote=F)#
#
#PCA on bioclim variables#
bios<-grep('bio.bio',names(popmeta))#
pc.out<-prcomp(popmeta[,bios],scale=T)#
popmeta$PC1<-pc.out$x[,1]#
popmeta$PC2<-pc.out$x[,2]#
popmeta$PC3<-pc.out$x[,3]#
#
#######################################################################
#
fits<-matrix(nrow=17,ncol=6)#
for(i in 11:27){#
	print(colnames(popmeta[i]))#
	print(colnames(popmeta)[i+17])#
	print(colnames(popmeta)[i+34])#
	lm.out_latlon<-lm(logit(prob)~popmeta[,i]+Latitude*Longitude,data=popmeta)#
	lm.out_lin<-lm(logit(prob)~popmeta[,i]+popmeta[,i+17],data=popmeta)#
	mp2<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=2,a=0,b=261)#
	lm.out_mp2<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp2)),data=popmeta)#
	mp3<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=3,a=0,b=261)	#
	lm.out_mp3<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp3)),data=popmeta)#
	mp4<-monpol(logit(prob)~popmeta[,i+17],data=popmeta,degree=4,a=0,b=261)#
	lm.out_mp4<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp4)),data=popmeta)#
	lm.out_full<-lm(logit(prob)~popmeta[,i]+offset(fitted(mp3))+popmeta[,i+34],data=popmeta)#
#
	fits[i-10,1]=AIC(lm.out_lin)#
	fits[i-10,2]=10-2*logLik(lm.out_mp2)#
	fits[i-10,3]=12-2*logLik(lm.out_mp3)#
	fits[i-10,4]=14-2*logLik(lm.out_mp4)#
	fits[i-10,5]=AIC(lm.out_latlon)#
	fits[i-10,6]=16-2*logLik(lm.out_full)#
}#
#
lm.out_latlon0<-lm(logit(prob)~Latitude*Longitude,data=popmeta)#
bufs<-c(seq(5,50,5),seq(60,100,10),200,300)#
pdf(file='Model_selection.pdf',width=4,height=4,useDingbats=F)#
cols=rainbow(4,v=0.8)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(3,3,1,1))#
plot(bufs,fits[,1],type='l',ylim=c(min(fits),max(fits)),lwd=2,bty='l',axes=F,xlab='Radius of adaptation (km)',ylab='AIC',col=cols[1])#
axis(1,at=bufs,las=2,labels=F,tck=-0.01,lwd=0.5)#
axis(1,at=c(10,50,100,200,300),tck=0,lwd=0)#
axis(2,lwd=0.5)#
lines(bufs,fits[,3],type='l',col=cols[3],lwd=2)#
lines(bufs,fits[,5],type='l',col='darkgrey',lwd=2)#
lines(bufs,fits[,6],type='l',col=cols[4],lwd=2)#
abline(v=20,lty=2)#
abline(h=AIC(lm.out_latlon0),col='lightgrey',lwd=2)#
legend('bottomright',legend=c('Lat x Long','Lat x Long + pop. dens.','Linear bio15 + pop. dens.','3rd degree bio15 + pop. dens.','3rd degree bio15 + linear bio18 + pop. dens.'),fill=c('lightgrey','darkgrey',cols[c(1,3,4)]),bty='n',cex=.7)#
dev.off()#
#
bufs[which.min(fits[,5])]#
lm.out_latlon<-lm(logit(prob)~popmeta[,'dens45']+Latitude*Longitude,data=popmeta)#
summary(lm.out_latlon)#
anova(lm(logit(prob)~popmeta[,'dens20']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens25']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens30']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens35']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens40']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens45']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
anova(lm(logit(prob)~popmeta[,'dens50']+Latitude*Longitude,data=popmeta),lm.out_latlon0)#
#
#########################################################################
#
fits2<-matrix(nrow=22,ncol=4)#
curr=1#
for(i in c(bios,grep('PC',colnames(popmeta)))){#
	currbio=popmeta[,i]#
	print(colnames(popmeta)[i])#
	lm.out_lin<-lm(logit(prob)~popmeta[,i]+dens20,data=popmeta)#
	mp2<-monpol(logit(prob)~currbio,data=popmeta,degree=2,a=min(currbio),b=max(currbio))#
	mp3<-monpol(logit(prob)~currbio,data=popmeta,degree=3,a=min(currbio),b=max(currbio))#
	mp4<-monpol(logit(prob)~currbio,data=popmeta,degree=4,a=min(currbio),b=max(currbio))#
	lm.out_mp2<-lm(logit(prob)~dens20+offset(fitted(mp2)),data=popmeta)#
	lm.out_mp3<-lm(logit(prob)~dens20+offset(fitted(mp3)),data=popmeta)#
	lm.out_mp4<-lm(logit(prob)~dens20+offset(fitted(mp4)),data=popmeta)#
	fits2[curr,1]=AIC(lm.out_lin)#
	fits2[curr,2]=10-2*logLik(lm.out_mp2)#
	fits2[curr,3]=12-2*logLik(lm.out_mp3)#
	fits2[curr,4]=14-2*logLik(lm.out_mp4)#
	curr=curr+1#
}#
#
pdf(file='Bioclim_selection.pdf',width=4,height=3,useDingbats=F)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(4,3,1,1))#
plot(fits2[,1],col=cols[1],axes=F,xlab='',ylab='AIC',xlim=c(0,23),ylim=c(20,85))#
points(fits2[,2],col=cols[2])#
points(fits2[,3],col=cols[3])#
points(fits2[,4],col=cols[4])#
points(23,fits[4,5],col=cols[1])#
ax<-c(paste('bio',1:19,sep=''),'PC1','PC2','PC3','LatLong')#
axis(1,at=1:23,labels=ax,las=2,cex.axis=0.8,lwd=0.5)#
axis(2,lwd=0.5)#
mtext('Bioclimate variable',side=1,line=3)#
legend('bottomleft',legend=c('Lat x Long + pop. dens.','Linear + pop. dens.','2nd degree + pop. dens.','3rd degree + pop. dens.','4th degree + pop. dens.'),fill=c('grey',cols),bty='n',cex=.7)#
dev.off()#
#
####################################################################################
#
fits3<-matrix(nrow=18,ncol=4)#
curr=1#
mp15<-monpol(logit(prob)~bio.bio15,data=popmeta,degree=3,a=0,b=261)#
resids<-resid(lm(logit(prob)~dens20+offset(fitted(mp15)),data=popmeta))#
for(i in paste('bio.bio',c(1:14,16:19),sep='')){#
	currbio=resid(lm(popmeta[,i]~offset(fitted(mp15))+popmeta$dens20))#
	lm.out_lin<-lm(logit(prob)~currbio+offset(fitted(mp15))+dens20,data=popmeta)#
	mp2<-monpol(resids~currbio,data=popmeta,degree=2,a=min(currbio),b=max(currbio))#
	mp3<-monpol(resids~currbio,data=popmeta,degree=3,a=min(currbio),b=max(currbio))#
	mp4<-monpol(resids~currbio,data=popmeta,degree=4,a=min(currbio),b=max(currbio))#
	lm.out_mp2<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp2)),data=popmeta)#
	lm.out_mp3<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp3)),data=popmeta)#
	lm.out_mp4<-lm(logit(prob)~dens20+offset(fitted(mp15))+offset(fitted(mp4)),data=popmeta)#
	fits3[curr,1]=14-2*logLik(lm.out_lin)#
	fits3[curr,2]=16-2*logLik(lm.out_mp2)#
	fits3[curr,3]=18-2*logLik(lm.out_mp3)#
	fits3[curr,4]=20-2*logLik(lm.out_mp4)#
	curr=curr+1#
}#
inds<-c(1:14,16:19)#
pdf(file='Bioclim18_selection.pdf',width=4,height=3,useDingbats=F)#
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(4,3,1,1))#
plot(inds,fits3[,1],ylim=c(30,50),col=cols[1],axes=F,xlab='',ylab='AIC')#
points(inds,fits3[,2],col=cols[2])#
points(inds,fits3[,3],col=cols[3])#
points(inds,fits3[,4],col=cols[4])#
abline(h=min(fits2),lty=2)#
ax<-c(paste('bio',inds,sep=''))#
axis(1,at=inds,labels=ax,las=2,cex.axis=0.8,lwd=0.5)#
axis(2,lwd=0.5)#
dev.off()#
#
###############################################################################
#ANOVA analysis of models#
full18<-(lm(logit(prob)~fitted(mp15)+bio.bio18+dens20,data=popmeta))#
full0<-(lm(logit(prob)~Latitude*Longitude+dens20,data=popmeta))#
full00<-(lm(logit(prob)~Latitude*Longitude,data=popmeta))#
stot<-sum(anova(full18)[,'Sum Sq'])#
ss1<-anova(full18)[1,'Sum Sq']#
ss3<-anova(full18)[2,'Sum Sq']#
ss2<-anova(full18)[3,'Sum Sq']#
#
drop15<-(lm(logit(prob)~dens20+bio.bio18,data=popmeta))#
drop20<-(lm(logit(prob)~(fitted(mp15))+bio.bio18,data=popmeta))#
drop18<-(lm(logit(prob)~(fitted(mp15))+dens20,data=popmeta))#
dropclim<-(lm(logit(prob)~dens20,data=popmeta))#
#
sink(file='additional_bioclim.log')#
print('pop density 20km LRT w Lat Long')#
anova(lm(logit(prob)~Latitude*Longitude+dens20,data=popmeta),lm(logit(prob)~Latitude*Longitude,data=popmeta))#
print('pop density 45km LRT w Lat Long')#
anova(lm(logit(prob)~Latitude*Longitude+dens45,data=popmeta),lm(logit(prob)~Latitude*Longitude,data=popmeta))#
lm.out<-step(lm(logit(prob)~dens20+(fitted(mp15))+bio.bio18+bio.bio9+bio.bio12,data=popmeta))#
summary(lm.out)#
#
drop1(full18)#
pchisq(2*logLik(full18)-2*logLik(drop15),df=3,lower=F)#
pchisq(2*logLik(full18)-2*logLik(drop18),df=1,lower=F)#
pchisq(2*logLik(full18)-2*logLik(drop20),df=1,lower=F)#
print('LRT climate')#
pchisq(2*logLik(full18)-2*logLik(dropclim),df=4,lower=F)#
#
print('eta sq bio15')#
ss1/stot#
print('eta sq dens20')#
ss2/stot#
print('eta sq bio18')#
ss3/stot#
#
coefs<-c(coef(full18)[1]+coef(mp15)[1],coef(full18)[2]*coef(mp15)[2:4],coef(full18)[3:4])#
names(coefs)<-c('Intercept','bio15','bio15_2','bio15_3','bio18','popdensity_20km')#
print("Fitted coefficients for bio15, bio18 and density model")#
coefs#
#
popmeta$dryseason<-(coefs[1]+coefs[2]*popmeta$bio.bio15+coefs[3]*popmeta$bio.bio15^2+coefs[4]*popmeta$bio.bio15^3+coefs[5]*popmeta$bio.bio18)#
aov.out<-anova(lm(logit(prob)~dryseason+dens20,data=popmeta))#
#
print('eta sq dry season')#
aov.out[1,'Sum Sq']/sum(aov.out[,'Sum Sq'])#
print('eta sq dens20')#
aov.out[2,'Sum Sq']/sum(aov.out[,'Sum Sq'])#
#
sink()#
###############################################################
#
########################################################################################
#
climpred<-rowSums(predict(full18,type='terms',terms=c('fitted(mp15)','bio.bio18')))#
denspred<-predict(full18,type='terms',terms=c('dens20'))#
dens20resid<-resid(lm(logit(prob)~denspred,data=popmeta))+logit(mean(popmeta$prob))#
bioresid<-resid(lm(logit(prob)~climpred,data=popmeta))+logit(mean(popmeta$prob))#
lm.dens<-lm(bioresid~dens20,data=popmeta)#
lm.bio<-lm(dens20resid~dryseason,data=popmeta)#
lm.bio18<-lm(dens20resid~bio.bio18,data=popmeta)#
lm.bio15.2<-lm(dens20resid[!popmeta$code%in%c('NGO','THI')]~bio.bio15,data=popmeta[!popmeta$code%in%c('NGO','THI'),])#
lm.bio18.2<-lm(dens20resid[!popmeta$code%in%c('NGO','THI')]~bio.bio18,data=popmeta[!popmeta$code%in%c('NGO','THI'),])#
pdf(file='Climate_pop_behavior.pdf',width=6,height=3,useDingbats=F)#
par(mfrow=c(1,2),mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,3,1,1))#
plot((popmeta$dryseason),2*inv.logit(dens20resid)-1,ylim=c(-1,1),pch=21,bg=popmeta$bio15col,xlab='Dry season intensity index',ylab='Preference index (adj. for pop.)',cex=popmeta$densCex,axes=F,xlim=c(-2.3,1),lwd=0.25)#
lines(seq(-3,1,0.1),2*inv.logit(predict(lm.bio,data.frame(dryseason=seq(-3,1,0.1))))-1,lty=2)#
# abline(0,1)#
summary(lm(logit(popmeta$prob)~fitted(lm.bio)))#
text(-1.6,.8,labels=expression(italic(eta^2) == 0.65))#
axis(1,at=c(-2,-1,0,1),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
plot(popmeta$dens20,2*inv.logit(bioresid)-1,ylim=c(-1,1),xlim=c(0,2500),pch=21,bg=popmeta$bio15col,xlab= expression("Population density km"^-2),ylab='Preference index (adj. for climate)',cex=popmeta$densCex,axes=F,lwd=0.25)#
lines(seq(0,3000,30),2*inv.logit(predict(lm.dens,data.frame(dens20=seq(0,3000,30))))-1,lty=2)#
summary(lm.dens)#
text(500,.8,labels=expression(italic(eta^2) == 0.18))#
axis(1,at=c(0,1000,2000),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
dev.off()#
#
pdf(file='bioclim_pop_behavior.pdf',width=2,height=3,useDingbats=F)#
par(mfrow=c(2,1),mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,3,1,1))#
plot(popmeta$bio.bio15,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. seasonality',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(50,100,150),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,200),2*inv.logit(predict(mp15,data.frame(bio.bio15=seq(0,200))))-1,lty=1)#
lines(seq(0,200),2*inv.logit(predict(lm.bio15.2,data.frame(bio.bio15=seq(0,200))))-1,lty=1,col='grey')#
#
plot(popmeta$bio.bio18,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. of warmest Q',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(0,1000,2000),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18,data.frame(bio.bio18=seq(0,5000))))-1,lty=1)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18.2,data.frame(bio.bio18=seq(0,5000))))-1,lty=1,col='grey')#
#
dev.off()#
pdf(file='Climate_bioclim_pop_behavior_combined.pdf',width=8,height=2.5,useDingbats=F)#
par(mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,4,1,1))#
layout(rbind(c(1,2,3),c(1,2,4)),widths=c(3,3,2))#
plot(popmeta$dens20,2*inv.logit(bioresid)-1,ylim=c(-1,1),xlim=c(0,2500),pch=21,bg=popmeta$bio15col,xlab= expression("Population density km"^-2),ylab='Preference index (adj. for climate)',cex=popmeta$densCex,axes=F,lwd=0.25)#
lines(seq(0,3000,30),2*inv.logit(predict(lm.dens,data.frame(dens20=seq(0,3000,30))))-1,lty=2)#
summary(lm.dens)#
text(500,.8,labels=expression(italic(eta^2) == 0.18))#
axis(1,at=c(0,500,1500,2500),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
box(bty='l',lwd=0.5)#
plot((popmeta$dryseason),2*inv.logit(dens20resid)-1,ylim=c(-1,1),pch=21,bg=popmeta$bio15col,xlab='Dry season intensity index',ylab='Preference index (adj. for pop.)',cex=popmeta$densCex,axes=F,xlim=c(-2.3,1),lwd=0.25)#
lines(seq(-3,1,0.1),2*inv.logit(predict(lm.bio,data.frame(dryseason=seq(-3,1,0.1))))-1,lty=2)#
# abline(0,1)#
summary(lm(logit(popmeta$prob)~fitted(lm.bio)))#
text(-1.6,.8,labels=expression(italic(eta^2) == 0.65))#
axis(1,at=c(-2,-1,0,1),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
box(bty='l',lwd=0.5)#
#
par(mgp=c(1.5,.2,0),tck=-0.02,bty='l',mar=c(3,5,1,1))#
#
plot(popmeta$bio.bio15,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. seasonality',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1))#
axis(1,at=c(50,100,150),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,200),2*inv.logit(predict(mp15,data.frame(bio.bio15=seq(0,200))))-1,lty=1)#
lines(seq(0,200),2*inv.logit(predict(lm.bio15.2,data.frame(bio.bio15=seq(0,200))))-1,lty=1,col='grey')#
box(bty='l',lwd=0.5)#
#
plot(popmeta$bio.bio18,2*inv.logit(dens20resid)-1,pch=21,bg=popmeta$bio15col,xlab='Precip. of warmest Q',ylab='',cex=popmeta$densCex/1.5,axes=F,lwd=0.25,ylim=c(-1,1),xlim=c(0,900))#
axis(1,at=c(0,400,800),lwd=0.5)#
axis(2,at=c(-1,0,1),lwd=0.5)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18,data.frame(bio.bio18=seq(0,5000))))-1,lty=1)#
lines(seq(0,5000),2*inv.logit(predict(lm.bio18.2,data.frame(bio.bio18=seq(0,5000))))-1,lty=1,col='grey')#
box(bty='l',lwd=0.5)#
#
dev.off()
plot(popmeta$pref)
plot(popmeta$pref,popmeta$dryseason)
library(scatterplot3d)
popmeta
library(scatterplot3d)
plot(popmeta$pref,popmeta$dryseason)
scatterplot3d(popmeta[,c('pref','dryseason','dens20')])
scatterplot3d(popmeta[,c('dryseason','dens20','pref')])
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F)
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h')
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',col=popmeta$prefcol)
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol)
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=F,box=F,type='h',color=popmeta$prefcol,pch=19)
scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
s3d$plane3d(lm.out)
s3d$plane3d(lm.out,col='grey')
s3d$points3d(popmeta[,c('dryseason','dens20','pref')])
lm.out$resid
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey')
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],color=popmeta$prefcol,pch=19)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],pch=popmeta$prefcol,pch=19)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol,pch=19)
s3d$plane3d(lm.out,col='grey')
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol,pch=19)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol,pch=19)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey')
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$plane3d(lm.out,col='grey',lty=4)
s3d$plane3d(lm.out,col='grey',lty=5)
s3d$plane3d(lm.out,col='grey',lty=6)
s3d$plane3d(lm.out,col='grey',lty=7)
s3d$plane3d(lm.out,col='grey',lty=1)
s3d$plane3d(lm.out,col='grey',lty=2)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$plane3d(lm.out,col='grey',lty=4)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=1)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h',lwd=4)
setwd('~/Dropbox/job applications/univ washington/figure')
write.table(popmeta,file='popmeta.txt',sep='\t',quote=F)
read.delim('popmeta.txt')
popmeta<-read.delim('popmeta.txt')
setwd('~/Dropbox/job applications/univ washington/figure')
popmeta<-read.delim('popmeta.txt')
library(scatterplot3d)
plot(popmeta$pref,popmeta$dryseason)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')
popmeta$prefcol[lm.out$resid>0]
popmeta<-read.delim('popmeta.txt',stringsAsFactors=F)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=3)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')
pdf('s3d.pdf',width=4,height=4)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(pref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col='grey',lty=3)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')#
dev.off()
pdf('s3d.pdf',width=4,height=4)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(pref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col='grey')#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')#
dev.off()
s3d$plane3d(lm.out,col='grey',lty=1)
pdf('s3d.pdf',width=4,height=4)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(pref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col='grey',lty=1)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')#
dev.off()
pdf('s3d.pdf',width=4,height=4,useDingbats=F)
pdf('s3d.pdf',width=4,height=4,useDingbats=F)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(pref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col='grey',lty=1)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')#
dev.off()
dev.off()
pdf('s3d.pdf',width=4,height=4,useDingbats=F)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(pref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col='grey',lty=1)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19,type='h')#
dev.off()
?scatterplot3d
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=1,draw_polygon=T)
s3d$plane3d(lm.out,col='grey',lty=0,draw_polygon=T)
s3d$plane3d(lm.out,col='grey',lty=1,draw_polygon=T)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col='grey',lty=1,draw_polygon=T)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
s3d$plane3d(lm.out,col=NA,lty=1,draw_polygon=T)
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
pdf('s3d.pdf',width=4,height=4,useDingbats=F)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','pref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(pref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)#
dev.off()
popmeta
popmeta$logitpref<-logit(popmeta$prob)
pdf('s3d.pdf',width=4,height=4,useDingbats=F)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
dev.off()
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(pref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(logitpref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','pref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)
lm.out<-lm(logitpref~dryseason+dens20,data=popmeta)
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','logitpref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
dev.off()
pdf('s3d.pdf',width=4,height=4,useDingbats=F)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(logitpref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','logitpref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)#
dev.off()
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(logitpref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','logitpref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)
popmeta$logitpref<-logit(popmeta$prob)#
pdf('s3d.pdf',width=4,height=4,useDingbats=F)#
s3d<-scatterplot3d(popmeta[,c('dryseason','dens20','logitpref')],grid=T,box=F,type='h',color=popmeta$prefcol,pch=19)#
lm.out<-lm(logitpref~dryseason+dens20,data=popmeta)#
s3d$plane3d(lm.out,col=NULL,lty=1,draw_polygon=T)#
s3d$points3d(popmeta[lm.out$resid>0,c('dryseason','dens20','logitpref')],col=popmeta$prefcol[lm.out$resid>0],pch=19)#
dev.off()
library('raster')#
setwd('~/Dropbox/RoseMcBrideShared')#
library(maps)#
#
locs<-read.csv('new_coords3.csv')#
r<-raster('~/Downloads/gpw-v4-population-density-adjusted-to-2015-unwpp-country-totals-rev11_2015_2pt5_min_tif/gpw_v4_population_density_adjusted_to_2015_unwpp_country_totals_rev11_2015_2pt5_min.tif')#
r2<-aggregate(r,fact=4)#
# ex<-cellsFromExtent(r,extent(31,33,-1,1))#
# r[ex[r[ex]==0]]<-NA#
# plot(r,xlim=c(30,34),ylim=c(-2,2))#
#
bio15r<-raster('~/Downloads/wc2.0_10m_bio 2/wc2.0_bio_10m_15.tif')#
locs$dens20<-extract(r2,locs[,c('Longitude','Latitude')],fun=mean)#
locs$bio15_20<-extract(bio15r,locs[,c('Longitude','Latitude')],fun=mean)#
bio18r<-raster('~/Downloads/wc2.0_10m_bio 2/wc2.0_bio_10m_18.tif')#
locs$bio18_20<-extract(bio18r,locs[,c('Longitude','Latitude')],fun=mean)#
#
Intercept =  -3.204739e+00#
bio15 = 7.319490e-02#
bio15_2 = -9.742814e-04#
bio15_3 =  4.322816e-06#
bio18 = -9.715850e-04#
dens20km  = 5.873513e-04#
locs$dryseason <- Intercept + bio15*(locs$bio15_20) + bio15_2*(locs$bio15_20)^2 +#
  bio15_3*(locs$bio15_20)^3 + bio18*(locs$bio18_20)#
dryseason<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
locs$pref <- Intercept + bio15*(locs$bio15_20) + bio15_2*(locs$bio15_20)^2 +#
  bio15_3*(locs$bio15_20)^3 + bio18*(locs$bio18_20) + +dens20km*locs$dens20#
locs$prob<-exp(locs$pref)/(1+exp(locs$pref))#
locs$pi<-2*(locs$prob)-1#
#
ll<-locs[locs$Location%in%c('StLouis','Kanel','Ourossogui','Ngoye','Thies','Mindin','Kedougou'),]#
#
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18+dens20km*r2#
prob<-exp(pref)/(1+exp(pref))
library('raster')#
setwd('~/Dropbox (Princeton)/RoseMcBrideShared')#
library(maps)#
#
locs<-read.csv('new_coords3.csv')#
r<-raster('~/Downloads/gpw-v4-population-density-adjusted-to-2015-unwpp-country-totals-rev11_2015_2pt5_min_tif/gpw_v4_population_density_adjusted_to_2015_unwpp_country_totals_rev11_2015_2pt5_min.tif')#
r2<-aggregate(r,fact=4)#
# ex<-cellsFromExtent(r,extent(31,33,-1,1))#
# r[ex[r[ex]==0]]<-NA#
# plot(r,xlim=c(30,34),ylim=c(-2,2))#
#
bio15r<-raster('~/Downloads/wc2.0_10m_bio 2/wc2.0_bio_10m_15.tif')#
locs$dens20<-extract(r2,locs[,c('Longitude','Latitude')],fun=mean)#
locs$bio15_20<-extract(bio15r,locs[,c('Longitude','Latitude')],fun=mean)#
bio18r<-raster('~/Downloads/wc2.0_10m_bio 2/wc2.0_bio_10m_18.tif')#
locs$bio18_20<-extract(bio18r,locs[,c('Longitude','Latitude')],fun=mean)#
#
Intercept =  -3.204739e+00#
bio15 = 7.319490e-02#
bio15_2 = -9.742814e-04#
bio15_3 =  4.322816e-06#
bio18 = -9.715850e-04#
dens20km  = 5.873513e-04#
locs$dryseason <- Intercept + bio15*(locs$bio15_20) + bio15_2*(locs$bio15_20)^2 +#
  bio15_3*(locs$bio15_20)^3 + bio18*(locs$bio18_20)#
dryseason<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
locs$pref <- Intercept + bio15*(locs$bio15_20) + bio15_2*(locs$bio15_20)^2 +#
  bio15_3*(locs$bio15_20)^3 + bio18*(locs$bio18_20) + +dens20km*locs$dens20#
locs$prob<-exp(locs$pref)/(1+exp(locs$pref))#
locs$pi<-2*(locs$prob)-1
r<-raster('~/Downloads/gpw-v4-population-density-adjusted-to-2015-unwpp-country-totals-rev11_2015_2pt5_min_tif/gpw_v4_population_density_adjusted_to_2015_unwpp_country_totals_rev11_2015_2pt5_min.tif')#
r2<-aggregate(r,fact=4)#
# ex<-cellsFromExtent(r,extent(31,33,-1,1))#
# r[ex[r[ex]==0]]<-NA#
# plot(r,xlim=c(30,34),ylim=c(-2,2))#
#
bio15r<-raster('~/Downloads/wc2.0_10m_bio 2/wc2.0_bio_10m_15.tif')#
locs$dens20<-extract(r2,locs[,c('Longitude','Latitude')],fun=mean)#
locs$bio15_20<-extract(bio15r,locs[,c('Longitude','Latitude')],fun=mean)#
bio18r<-raster('~/Downloads/wc2.0_10m_bio 2/wc2.0_bio_10m_18.tif')#
locs$bio18_20<-extract(bio18r,locs[,c('Longitude','Latitude')],fun=mean)#
#
Intercept =  -3.204739e+00#
bio15 = 7.319490e-02#
bio15_2 = -9.742814e-04#
bio15_3 =  4.322816e-06#
bio18 = -9.715850e-04#
#
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
prob<-exp(pref)/(1+exp(pref))
par(mgp=c(1.2,.2,0),tck=-0.01,bty='l',mar=c(3,3,1,1))
plot(prob,xlim=c(-20,50),ylim=c(-40,40),col=colorRampPalette(c('cornflowerblue','red'))(100),legend=F)
prob
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(0,262))
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))
pref
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-6,14))
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-5,5))
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-5,3))
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-6,3))
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Precipitation seasonality')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(-15+(20/261)*seq(0,200,100),rep(-24,5),seq(0,200,100))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
library(plotrix)
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Precipitation seasonality')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(-15+(20/261)*seq(0,200,100),rep(-24,5),seq(0,200,100))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')
popmeta
library(plotrix)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Precipitation seasonality')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(-15+(20/261)*seq(0,200,100),rep(-24,5),seq(0,200,100))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]
library(plotrix)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Precipitation seasonality')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(-15+(20/261)*seq(0,200,100),rep(-24,5),seq(0,200,100))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
text(-15+(20/261)*seq(0,200,100),rep(-24,5),c(-3,0,3))
text(c(-15,05,5),rep(-24,5),c(-3,0,3))
library(plotrix)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,05,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
library(plotrix)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
pdf(file='~/Dropbox (Princeton)/job applications/figures/int_map.pdf',width=4,height=4)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)#
dev.off()
library(plotrix)#
pdf(file='~/Dropbox (Princeton)/job applications/figures/int_map.pdf',width=6,height=6)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)#
dev.off()
pref[pref<(-3)]<-(-3)#
pref[pref<(>3)]<-(3)#
#
library(plotrix)#
pdf(file='~/Dropbox (Princeton)/job applications/figures/int_map.pdf',width=6,height=6)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)#
dev.off()
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
pref[pref<(-3)]<-(-3)#
pref[pref<(3)]<-(3)#
#
library(plotrix)#
pdf(file='~/Dropbox (Princeton)/job applications/figures/int_map.pdf',width=6,height=6)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)#
dev.off()
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]
head(pref[pref<(-3)])
pref[pref<(-3)]<-(-3)
pref[pref<(3)]<-(3)
pref
library(plotrix)#
pdf(file='~/Dropbox (Princeton)/job applications/figures/int_map.pdf',width=6,height=6)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)#
dev.off()
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
pref[pref<(-3)]<-(-3)#
pref[pref>(3)]<-(3)#
#
library(plotrix)#
pdf(file='~/Dropbox (Princeton)/job applications/figures/int_map.pdf',width=6,height=6)#
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)#
dev.off()
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
pref[pref<(-3)]<-(-3)#
pref[pref>(2)]<-(2)
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
pref[pref<(-2)]<-(-2)#
pref[pref>(2)]<-(2)
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
pref<-Intercept+bio15r*bio15+(bio15r**2)*bio15_2+(bio15r**3)*bio15_3+bio18r*bio18#
popmeta<-read.delim('~/Dropbox (Princeton)/2019 Rose et al AaegVariationAfrica/Figures/Figure1 stuff/colonies_fitted.txt')#
popmeta$prefcol<-colorRampPalette(c('cornflowerblue','red'))(100)[round(popmeta$prob*100)]#
pref[pref<(-3)]<-(-3)#
pref[pref>(3)]<-(3)
par(mar=c(1,1,1,1),mgp=c(1.5,.5,0),tck=-0.01)#
plot(pref,xlim=c(-25,55),ylim=c(-40,40),col=colorRampPalette(c('darkgreen','yellow','white'))(200),xlab='',ylab='',bty='n',box=F,axes=F,legend=F,zlim=c(-3,3))#
segments(popmeta$plotLong,popmeta$plotLat,popmeta$Longitude,popmeta$Latitude,lwd=0.5)#
for(i in 1:nrow(popmeta)){#
	draw.circle((popmeta$plotLong)[i],(popmeta$plotLat)[i],radius=log10(popmeta$dens20[i]+10)/1.3,col=popmeta$prefcol[i],lwd=0.25)#
}#
draw.circle(-10,-8,radius=log10(10+10)/1.3,col='black')#
draw.circle(-5,-8,radius=log10(10+100)/1.3,col='black')#
draw.circle(0,-8,radius=log10(10+1000)/1.3,col='black')#
gradient.rect(-15,-17,5,-15,col=colorRampPalette(c('cornflowerblue','red'))(200))#
text(c(-15,-5,5),rep(-13,5),c(-1,0,1))#
gradient.rect(-15,-28,5,-26,col=colorRampPalette(c('darkgreen','yellow','white'))(200))#
text(-5,-30,'Dry season intensity')#
text(-5,-19,'Preference index')#
text(-5,-4,expression("Pop. density km"^-2))#
text(c(-15,-5,5),rep(-24,5),c(-3,0,3))#
text(-10,-8,'10',col='white',cex=0.5)#
text(-5,-8,'100',col='white',cex=0.5)#
text(0,-8,'1000',col='white',cex=0.5)
options(stringsAsFactors=F)#
library(zoo)#
library(ape)#
library(pegas)#
library(data.table)#
library(permute)#
#
setwd('~/Dropbox (Princeton)/GradWork/114_coral_genomes/processed_data')#
#
amil<-read.delim('amil.picard')#
sum(amil$PF_HQ_ALIGNED_READS)#
mean(amil$PF_HQ_ERROR_RATE)#
altref<-read.delim('altref.picard')#
sum(altref$PF_HQ_ALIGNED_READS)#
mean(altref$PF_HQ_ERROR_RATE)#
#
admix<-read.delim('admix.qopt',header=F,sep=' ')[,-5]#
admix<-as.matrix(t(admix))#
samps<-read.delim('samps.txt',header=F)[,1]#
colnames(admix)<-samps#
species<-apply(admix,2,which.max)#
names(species)<-samps#
meta<-read.csv('meta.csv')#
meta$species<-species[match(meta$filename,names(species))]#
#
meta<-meta[order(meta$cryp),]#
admix<-admix[,match(meta$filename,colnames(admix))]#
admix<-admix[order(meta$cryp[apply(admix,1,which.max)]),]#
#
meta$cryp<-factor(meta$cryp)#
#
idx<-read.delim('all.idxstats.gz',header=T)#
csym<-idx[grep('c_sym',idx$chr),]#
ccov<-125*rowSums(csym[,3:116])/csym[,2]#
csym<-csym[ccov<2*median(ccov)&ccov>0.5*median(ccov),]#
cnorm<-125*colSums(csym[,3:116])/sum(csym[,2])#
#
dsym<-idx[grep('d_sym', idx$chr),]#
dcov<-125*rowSums(dsym[,3:116])/dsym[,2]#
dsym<-dsym[dcov<2*median(dcov)&dcov>0.5*median(dcov),]#
dnorm<-125*colSums(dsym[,3:116])/sum(dsym[,2])#
#
propd<-dnorm/(dnorm+cnorm)#
meta$propd<-propd[match(meta$filename ,gsub('X','',names(propd)))]#
#
meta$binsym<-'C'#
meta$binsym[meta$propd>0.5]<-'D'#
meta$pool<-factor(meta$pool)#
#
write.csv(meta,file='meta.csv',row.names=F,quote=F)#
#
glm.out1<-glm(binbl~pool+cryp+propd,data=meta,family='binomial')#
glm.out2<-glm(binbl~pool+propd,data=meta,family='binomial')#
#####################
#GENOMIC ANALYSES          #
#####################
#
HA.HC<-read.delim('HA.HC.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HA.HD<-read.delim('HA.HD.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HA.HE<-read.delim('HA.HE.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HC.HD<-read.delim('HC.HD.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HC.HE<-read.delim('HC.HE.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HD.HE<-read.delim('HD.HE.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HA.HC$pos<-paste(HA.HC$chr,HA.HC$start,sep=':')#
HA.HD$pos<-paste(HA.HD$chr,HA.HD$start,sep=':')#
HA.HE$pos<-paste(HA.HE$chr,HA.HE$start,sep=':')#
HC.HD$pos<-paste(HC.HD$chr,HC.HD$start,sep=':')#
HC.HE$pos<-paste(HC.HE$chr,HC.HE$start,sep=':')#
HD.HE$pos<-paste(HD.HE$chr,HD.HE$start,sep=':')#
postab<-table(c(HA.HC$pos,HA.HD$pos,HA.HE$pos,HC.HD$pos,HC.HE$pos,HD.HE$pos))#
overlap<-names(postab[postab==6])#
HA.HC<-HA.HC[HA.HC$pos%in%overlap,]#
HA.HD<-HA.HD[HA.HD$pos%in%overlap,]#
HA.HE<-HA.HE[HA.HE$pos%in%overlap,]#
HC.HD<-HC.HD[HC.HD$pos%in%overlap,]#
HC.HE<-HC.HE[HC.HE$pos%in%overlap,]#
HD.HE<-HD.HE[HD.HE$pos%in%overlap,]#
winpos<-HA.HC$pos#
#
getPBS<-function(P1P2,P1P3,P1P4,P2P3,P2P4,P3P4){#
	TP1P2=-log(1-P1P2)#
	TP1P3=-log(1-P1P3)#
	TP1P4=-log(1-P1P4)#
	TP2P3=-log(1-P2P3)#
	TP2P4=-log(1-P2P4)#
	TP3P4=-log(1-P3P4)#
	P1=((TP1P2+TP1P3-TP2P3)+(TP1P2+TP1P4-TP2P4)+(TP1P3+TP1P4-TP3P4))/6#
	P2=((TP1P2+TP2P3-TP1P3)+(TP1P2+TP2P4-TP1P4)+(TP2P3+TP2P4-TP3P4))/6#
	P3=((TP1P3+TP2P3-TP1P2)+(TP1P3+TP3P4-TP1P4)+(TP2P3+TP3P4-TP2P4))/6#
	P4=((TP1P4+TP2P4-TP1P2)+(TP1P4+TP3P4-TP1P3)+(TP2P4+TP3P4-TP2P3))/6#
	return(cbind(P1,P2,P3,P4))#
}#
#
getTrees<-function(vec){#
	v<-(-log(1-vec))#
	dmat<-matrix(nrow=4,ncol=4)#
	colnames(dmat)<-c('HA','HC','HD','HE')#
	rownames(dmat)<-c('HA','HC','HD','HE')#
	dmat[lower.tri(dmat)]<-v#
	currdist<-as.dist(dmat)#
	nj.out<-bionj(currdist)#
	return(nj.out)#
}#
#
Fst10kb<-data.frame(row.names=winpos,HA.HC=HA.HC$num/HA.HC$den)#
Fst10kb$HA.HD<-HA.HD$num/HA.HD$den#
Fst10kb$HA.HE<-HA.HE$num/HA.HE$den#
Fst10kb$HC.HD<-HC.HD$num/HC.HD$den#
Fst10kb$HC.HE<-HC.HE$num/HC.HE$den#
Fst10kb$HD.HE<-HD.HE$num/HD.HE$den#
Fst10kb<-na.omit(Fst10kb)#
Fst10kb<-as.matrix(Fst10kb)#
trees<-apply(Fst10kb,1,getTrees)#
#
######################
#####################
#
#Figure S1#
#Table S2#
#
sns<-fread('snpfst_all_info.txt.gz')#
colnames(sns)<-c('SNP','maf','HA.HC','HA.HD','HA.HE','HC.HD','HC.HE','HD.HE','Eff','gene','nuc','prot','warn')#
sns$missense<-grepl('missense',sns$Eff)#
sns$chr<-gsub(':.*','',sns$SNP)#
sns$pos<-gsub('.*:','',sns$SNP)#
sns$maf<-round(sns$maf,2)#
#
table(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99,'gene'])#
table(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99&sns$missense,'gene'])#
dim(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99&sns$missense,'gene'])#
table(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99,'chr'])#
#
snsPBS<-getPBS(sns$HA.HC,sns$HA.HD,sns$HA.HE,sns$HC.HD,sns$HC.HE,sns$HD.HE)#
sns$HA<-snsPBS[,1]#
sns$HC<-snsPBS[,2]#
sns$HD<-snsPBS[,3]#
sns$HE<-snsPBS[,4]#
#
s2<-sns[sns$missense&sns$HE>quantile(sns$HE,0.9),c(1:2,10:13,17:20)]#
write.table(s2,sep='\t',quote=F,row.names=F,file='../Tables/TableS2.txt')#
#
# shufs<-replicate(100,{#
# shuffle(nrow(sns),control=how(blocks=sns$maf))#
# })#
#
# HAperms90<-apply(shufs,2,function(x) table(sns$HA[x][which(sns$missense)]>quantile(sns$HA,0.9))[2])#
# HAobs90<-table(sns$HA[which(sns$missense)]>quantile(sns$HA,0.9))[2]#
# HAperms95<-apply(shufs,2,function(x) table(sns$HA[x][which(sns$missense)]>quantile(sns$HA,0.95))[2])#
# HAobs95<-table(sns$HA[which(sns$missense)]>quantile(sns$HA,0.95))[2]#
# HAperms99<-apply(shufs,2,function(x) table(sns$HA[x][which(sns$missense)]>quantile(sns$HA,0.99))[2])#
# HAobs99<-table(sns$HA[which(sns$missense)]>quantile(sns$HA,0.99))[2]#
#
# HCperms90<-apply(shufs,2,function(x) table(sns$HC[x][which(sns$missense)]>quantile(sns$HC,0.9))[2])#
# HCobs90<-table(sns$HC[which(sns$missense)]>quantile(sns$HC,0.9))[2]#
# HCperms95<-apply(shufs,2,function(x) table(sns$HC[x][which(sns$missense)]>quantile(sns$HC,0.95))[2])#
# HCobs95<-table(sns$HC[which(sns$missense)]>quantile(sns$HC,0.95))[2]#
# HCperms99<-apply(shufs,2,function(x) table(sns$HC[x][which(sns$missense)]>quantile(sns$HC,0.99))[2])#
# HCobs99<-table(sns$HC[which(sns$missense)]>quantile(sns$HC,0.99))[2]#
#
# HDperms90<-apply(shufs,2,function(x) table(sns$HD[x][which(sns$missense)]>quantile(sns$HD,0.9))[2])#
# HDobs90<-table(sns$HD[which(sns$missense)]>quantile(sns$HD,0.9))[2]#
# HDperms95<-apply(shufs,2,function(x) table(sns$HD[x][which(sns$missense)]>quantile(sns$HD,0.95))[2])#
# HDobs95<-table(sns$HD[which(sns$missense)]>quantile(sns$HD,0.95))[2]#
# HDperms99<-apply(shufs,2,function(x) table(sns$HD[x][which(sns$missense)]>quantile(sns$HD,0.99))[2])#
# HDobs99<-table(sns$HD[which(sns$missense)]>quantile(sns$HD,0.99))[2]#
#
# HEperms90<-apply(shufs,2,function(x) table(sns$HE[x][which(sns$missense)]>quantile(sns$HE,0.9))[2])#
# HEobs90<-table(sns$HE[which(sns$missense)]>quantile(sns$HE,0.9))[2]#
# HEperms95<-apply(shufs,2,function(x) table(sns$HE[x][which(sns$missense)]>quantile(sns$HE,0.95))[2])#
# HEobs95<-table(sns$HE[which(sns$missense)]>quantile(sns$HE,0.95))[2]#
# HEperms99<-apply(shufs,2,function(x) table(sns$HE[x][which(sns$missense)]>quantile(sns$HE,0.99))[2])#
# HEobs99<-table(sns$HE[which(sns$missense)]>quantile(sns$HE,0.99))[2]#
#
# sns$loc1<-(sns$chr=='chr7'&sns$pos> 20350000&sns$pos<20570000)#
# sns$loc2<-(sns$chr=='Sc0000015'&sns$pos> 2380000&sns$pos<2580000)#
# sns2<-sns[sns$loc1==F & sns$loc2==F,]#
#
# shufs2<-replicate(100,{#
# shuffle(nrow(sns2),control=how(blocks=sns2$maf))#
# })#
#
# HEperms90_2<-apply(shufs2,2,function(x) table(sns2$HE[x][which(sns2$missense)]>quantile(sns2$HE,0.9))[2])#
# HEobs90_2<-table(sns2$HE[which(sns2$missense)]>quantile(sns2$HE,0.9))[2]#
# HEperms95_2<-apply(shufs2,2,function(x) table(sns2$HE[x][which(sns2$missense)]>quantile(sns2$HE,0.95))[2])#
# HEobs95_2<-table(sns2$HE[which(sns2$missense)]>quantile(sns2$HE,0.95))[2]#
# HEperms99_2<-apply(shufs2,2,function(x) table(sns2$HE[x][which(sns2$missense)]>quantile(sns2$HE,0.99))[2])#
# HEobs99_2<-table(sns2$HE[which(sns2$missense)]>quantile(sns2$HE,0.99))[2]#
# save(shufs,shufs2,HAperms90,HAperms95,HAperms99,HAobs90,HAobs95,HAobs99,#
# HCperms90,HCperms95,HCperms99,HCobs90,HCobs95,HCobs99,#
# HDperms90,HDperms95,HDperms99,HDobs90,HDobs95,HDobs99,#
# HEperms90,HEperms95,HEperms99,HEobs90,HEobs95,HEobs99,#
# HEperms90_2,HEperms95_2,HEperms99_2,HEobs90_2,HEobs95_2,HEobs99_2,#
# file='sns_perms.Rdata')#
#
getP<-function(perms,obs){#
	currp<-(min(length(which(perms>obs)),length(which(perms<obs)))*2)/length(perms)#
	if(currp==0) return(paste0('P<',1/length(perms)))#
	return(paste0('P=',currp))#
}#
#
load('sns_perms.Rdata')#
#
png('../Figures/FigureS2.png',width=8,height=6,res=300,units='in')#
layout(rbind(c(1,2,2,2,2),c(3,4,5,6,7),c(8,9,10,11,12),c(13,14,15,16,17)))#
par(mar=c(3,3,1,1),mgp=c(1.5,0.2,0),bty='n',tck=-0.01,oma=c(0,1,0,0),cex.main=1)#
#
plot(density(sns$maf[sns$missense]),col='red',main='',xlab='MAF')#
lines(density(sns$maf[!sns$missense]))#
legend('top',fill=c('black','red'),legend=c('synonymous','nonsynonymous'),bty='n',cex=0.7)#
title('A',adj=0,cex.main=1.5)#
#
snsPlot<-sns[sns$missense&sns$HE>0.1,]#
snsPlot$col<-c(grey(0.2),grey(0.6))[1+as.numeric(factor(snsPlot$chr,levels=unique(snsPlot$chr)))%%2]#
snsPlot$col[snsPlot$HE>quantile(sns$HE,0.9)]<-'tomato4'#
snsPlot$col[snsPlot$HE>quantile(sns$HE,0.95)]<-'red4'#
snsPlot$col[snsPlot$HE>quantile(sns$HE,0.99)]<-'red1'#
plot(snsPlot$HE,cex=0.2,xlab='Nonsynonymous SNPs',ylab='HE PBS',col=snsPlot$col,xlim=c(0,130000))#
title('B',adj=0,cex.main=1.5)#
legend('topright',fill=c('tomato4','red4','red1'),legend=c('top 10%','top 5%','top 1%'),bty='n',cex=0.7)#
#
hist(HAperms90,col='grey',xlab='',ylab='Counts',xlim=c(50000,55000),main='HA',breaks=6)#
abline(v=HAobs90,col='red')#
title(main=getP(HAperms90,HAobs90),font.main=1,cex.main=0.8,adj=0.3,line=-1)#
title('C',adj=0,cex.main=1.5)#
mtext('top 10%',side=2,las=3,line=2.5)#
hist(HCperms90,col='grey',xlab='',ylab='',xlim=c(50000,55000),main='HC',breaks=6)#
abline(v=HCobs90,col='red')#
title(main=getP(HCperms90,HCobs90),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
hist(HDperms90,col='grey',xlab='',ylab='',xlim=c(50000,55000),main='HD',breaks=6)#
abline(v=HDobs90,col='red')#
title(main=getP(HDperms90,HDobs90),font.main=1,cex.main=0.8,adj=0.08,line=-1)#
hist(HEperms90,col='grey',xlab='',ylab='',xlim=c(50000,55000),main='HE',breaks=6)#
abline(v=HEobs90,col='red')#
title(main=getP(HEperms90,HEobs90),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
hist(HEperms90_2,col='grey',xlab='',ylab='Counts',xlim=c(50000,55000),main='HE (no L1,L2)',breaks=6)#
abline(v=HEobs90_2,col='red')#
title(main=getP(HEperms90_2,HEobs90_2),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
#
hist(HAperms95,col='grey',xlab='',ylab='Counts',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HAobs95,col='red')#
title(main=getP(HAperms95,HAobs95),font.main=1,cex.main=0.8,adj=0.4,line=-1)#
mtext('top 5%',side=2,las=3,line=2.5)#
hist(HCperms95,col='grey',xlab='',ylab='',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HCobs95,col='red')#
title(main=getP(HCperms95,HCobs95),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
hist(HDperms95,col='grey',xlab='',ylab='',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HDobs95,col='red')#
title(main=getP(HDperms95,HDobs95),font.main=1,cex.main=0.8,adj=0.08,line=-1)#
hist(HEperms95,col='grey',xlab='',ylab='',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HEobs95,col='red')#
title(main=getP(HEperms95,HEobs95),font.main=1,cex.main=0.8,adj=0.1,line=-1)#
hist(HEperms95_2,col='grey',xlab='',ylab='Counts',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HEobs95_2,col='red')#
title(main=getP(HEperms95_2,HEobs95_2),font.main=1,cex.main=0.8,adj=0.1,line=-1)#
#
hist(HAperms99,col='grey',xlab='Nonsynonymous outliers',ylab='Counts',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HAobs99,col='red')#
title(main=getP(HAperms99,HAobs99),font.main=1,cex.main=0.8,adj=0.1,line=-1)#
mtext('top 1%',side=2,las=3,line=2.5)#
hist(HCperms99,col='grey',xlab='Nonsynonymous outliers',ylab='',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HCobs99,col='red')#
title(main=getP(HCperms99,HCobs99),font.main=1,cex.main=0.8,adj=0.9,line=-1)#
hist(HDperms99,col='grey',xlab='Nonsynonymous outliers',ylab='',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HDobs99,col='red')#
title(main=getP(HDperms99,HDobs99),font.main=1,cex.main=0.8,adj=0.08,line=-1)#
hist(HEperms99,col='grey',xlab='Nonsynonymous outliers',ylab='',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HEobs99,col='red')#
title(main=getP(HEperms99,HEobs99),font.main=1,cex.main=0.8,adj=0.8,line=-1)#
hist(HEperms99_2,col='grey',xlab='Nonsynonymous outliers',ylab='Counts',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HEobs99_2,col='red')#
title(main=getP(HEperms99_2,HEobs99_2),font.main=1,cex.main=0.8,adj=0.8,line=-1)#
dev.off()#
#
g1<-sns[sns$gene=='Amillepora12599',]#
fisher.test(g1$HA.HE>0.99&g1$HC.HE>0.99&g1$HD.HE>0.99,g1$missense)#
g2<-sns[sns$gene=='Amillepora12602',]#
fisher.test(g2$HA.HE>0.99&g2$HC.HE>0.99&g2$HD.HE>0.99,g2$missense)#
l1<-sns[sns$loc1,]#
fisher.test(g2$HA.HE>0.99&g2$HC.HE>0.99&g2$HD.HE>0.99,g2$missense)#
#
##########################
####################
#####################
#
#############
#Figure 1#
##############
#
png('../Figures/Figure1.png',width=6,height=6,res=300,units='in')#
layout(rbind(c(1,1,1),c(2,3,4),c(5,6,7)))#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,cex=0.5,bty='l',cex.main=1.5)#
#
crypcol= rainbow(100,v=0.8)[c(18,5,50,80)]#
crypcols= crypcol[factor(meta$cryp)]#
#
#A#
bp<-barplot(admix,col=crypcol,names.arg=rep('',ncol(admix)),las=1,ylab='Proportion ancestry')#
mtext('HA',side=1,line=1,at=bp[7])#
mtext('HC',side=1,line=1,at=bp[25])#
mtext('HD',side=1,line=1,at=bp[50])#
mtext('HE',side=1,line=1,at=bp[90])#
title('A',adj=0)#
#
#B#
#
covmat<-as.matrix(read.delim('pcangsd.cov',header=F))#
colnames(covmat)<-samps#
rownames(covmat)<-samps#
covmat<-covmat[match(meta$filename,rownames(covmat)),match(meta$filename,colnames(covmat))]#
e<-eigen(covmat)#
plot(e$vectors[,1],e$vectors[,2],col=crypcols,xlab='PC 1',ylab='PC 2')#
title('B',adj=0)#
#
#C#
#
globalfst<-read.delim('global_fst.txt',header=F,sep=' ')#
globaltree<-getTrees(globalfst[,2])#
globaltree$tip.label<-c('HA','HC','HD','HE')#
plot(globaltree,type='u',cex=1, edge.width=2,lab4ut='axial') #
segments(.05,0,.1,0,lwd=2)#
text(0.075,0.01,label=expression(italic(T) == 0.05))#
title('C',adj=0)#
#
#D#
plotperm<-data.frame(perms=c(HAperms90,HCperms90,HDperms90,HEperms90),ind=c(rep(1,100),rep(2,100),rep(3,100),rep(4,100)))#
plot(jitter(plotperm$ind,0.3),plotperm$perms,cex=1,ylim=c(50000,55500),lwd=0.5,col='grey',xlab='Species',ylab=expression('Nonsynonymous outliers x'~10^3),axes=F,xlim=c(0.4,4.5))#
axis(1,at=1:4,labels=c('HA','HC','HD','HE'))#
axis(2,at=c(50000,52000,54000),labels=c(50,52,54))#
points(1:4,c(HAobs90,HCobs90,HDobs90,HEobs90),cex=1,col='red',pch=19)#
box(bty='l')#
legend('topright',fill=c('grey','red'),legend=c('permuted','observed'),bty='n')#
title('D',adj=0)#
#
#E#
seq<-ape::read.dna('ahy_mitosnps.fa',format='fasta')#
meta2<-meta[match(labels(seq),meta$filename),]#
table(labels(seq)==meta2$filename)#
d<-dist.dna(seq)#
hc<-(hclust(d))#
cut<-cutree(hc,k=2)#
meta$mitotype<-cut[match(meta$filename,meta2$filename)]#
#
h<-pegas::haplotype(seq)#
h<-sort(h,what='label')#
labs=labels(h)#
l<-rep(NA,nrow(seq))#
for(i in 1:length(labs)){#
	l[attr(h,'index')[[i]]]<-labs[i]#
}#
sp=table(l,meta2$cryp)#
net<-pegas::haploNet(h)#
table(attr(net,'labels')==rownames(sp))#
attr(net,'alter.links')<-NULL#
#
plot(net,size=attr(net,'freq')**.5,pie=sp,show.mutation=2,scale.ratio=1,fast=F,labels=F,bg=crypcol)#
legend('topleft',legend=c('HA','HC','HD','HE'),fill=crypcol,bty='n')#
title('E',adj=0)#
par(xpd=F)#
text(0,-10,label='HG1')#
text(30,-10,label='HG2')#
#F#
plot(jitter(as.numeric(factor(meta$cryp))),meta$propd,axes=F,xlab='Species',ylab=expression(paste("Proportion",italic(" Durusdinium")," symbionts")),type='n',cex=1,ylim=c(0,1),las=1,cex.axis=1)#
axis(1,at=1:4,labels=c('HA','HC','HD','HE'))#
axis(2)#
box(bty='l')#
abline(h=0.5,lwd=2,lty=2)#
points(jitter(as.numeric(factor(meta$cryp))),meta$propd,col=crypcols,cex=1)#
#
title('F',adj=0)#
#G#
bl<-table(meta$binbl,interaction(meta$cryp,meta$propd>0.5))#
bltab<-matrix(0,5,8)#
bltab[5,]<-bl[2,]#
bltab[1,c(1,5)]<-bl[1,c(1,5)]#
bltab[2,c(2,6)]<-bl[1,c(2,6)]#
bltab[3,c(3,7)]<-bl[1,c(3,7)]#
bltab[4,c(4,8)]<-bl[1,c(4,8)]#
bp<-barplot(bltab,col=c(crypcol,grey(0.95)),names.arg=c('HA','HC','HD','HE','HA','HC','HD','HE'),cex.names=1,ylab='Count',las=2)#
mtext('Sym. C',at=mean(bp[2:3]),side=1,las=1,line=1.5,cex=0.7)#
mtext('Sym. D',at=mean(bp[6:7]),side=1,las=1,line=1.5,cex=0.7)#
legend('topleft',fill=grey(0.95),legend='bleached',bty='n')#
title('G',adj=0)#
dev.off()#
##############
#
goodcov<-read.delim('good_coverage.txt',na.strings='.',header=F)#
rownames(goodcov)<-paste(goodcov[,1],goodcov[,2],sep=':')#
goodcov<-goodcov[winpos,]#
repeatcov<-read.delim('repeat_coverage.bed',na.strings='.',header=F)#
rownames(repeatcov)<-paste(repeatcov[,1],repeatcov[,2],sep=':')#
repeatcov<-repeatcov[winpos,]#
cor.test(repeatcov[,7],goodcov[,7])#
#
piHA<-read.delim('HA.pestPG')#
piHA$winpos<-paste(piHA$Chr,piHA$WinCenter-5000,sep=':')#
piHA<-piHA[match(winpos,piHA$winpos),]#
piHC<-read.delim('HC.pestPG')#
piHC$winpos<-paste(piHC$Chr,piHC$WinCenter-5000,sep=':')#
piHC<-piHC[match(winpos,piHC$winpos),]#
piHD<-read.delim('HD.pestPG')#
piHD$winpos<-paste(piHD$Chr,piHD$WinCenter-5000,sep=':')#
piHD<-piHD[match(winpos,piHD$winpos),]#
piHE<-read.delim('HE.pestPG')#
piHE$winpos<-paste(piHE$Chr,piHE$WinCenter-5000,sep=':')#
piHE<-piHE[match(winpos,piHE$winpos),]#
#
meanPi<-(piHA$tP/goodcov[,4]+piHC$tP/goodcov[,4]+piHD$tP/goodcov[,4]+piHE$tP/goodcov[,4])/4#
#
edges<-c()#
for(chr in unique(HA.HE$chr)){#
	curr<-which(HA.HE$chr==chr)#
	if(length(curr)<10){#
		edges<-c(edges,curr)#
		next#
	}#
	edges<-c(edges,curr[1:5],curr[(length(curr)-4):length(curr)])#
}#
#
getPBSwin<-function(focal.ref,focal.out,ref.out,k=10,edges){#
	T1=-log(1-rollapply(focal.ref$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(focal.ref$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	T2=-log(1-rollapply(focal.out $num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(focal.out $den,FUN=mean,width=k,na.rm=T, fill=NA))#
	T3=-log(1-rollapply(ref.out $num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(ref.out $den,FUN=mean,width=k,na.rm=T, fill=NA))#
	PBS=(T1+T2-T3)/2#
	PBS[edges]<-NA#
	return(PBS)#
}#
# P1P2=HA.HC#
# P1P3=HA.HD#
# P1P4=HA.HE#
# P2P3=HC.HD#
# P2P4=HC.HE#
# P3P4=HD.HE#
#
getMeanPBS<-function(P1P2,P1P3,P1P4,P2P3,P2P4,P3P4,k=10,edges,remove.edges=T){#
	TP1P2=-log(1-rollapply(P1P2$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P1P2$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP1P3=-log(1-rollapply(P1P3$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P1P3$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP1P4=-log(1-rollapply(P1P4$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P1P4$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP2P3=-log(1-rollapply(P2P3$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P2P3$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP2P4=-log(1-rollapply(P2P4$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P2P4$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP3P4=-log(1-rollapply(P3P4$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P3P4$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	P1=((TP1P2+TP1P3-TP2P3)+(TP1P2+TP1P4-TP2P4)+(TP1P3+TP1P4-TP3P4))/6#
	P2=((TP1P2+TP2P3-TP1P3)+(TP1P2+TP2P4-TP1P4)+(TP2P3+TP2P4-TP3P4))/6#
	P3=((TP1P3+TP2P3-TP1P2)+(TP1P3+TP3P4-TP1P4)+(TP2P3+TP3P4-TP2P4))/6#
	P4=((TP1P4+TP2P4-TP1P2)+(TP1P4+TP3P4-TP1P3)+(TP2P4+TP3P4-TP2P3))/6#
	res<-as.data.frame(cbind(P1,P2,P3,P4))#
	if(remove.edges) res[edges,]<-NA#
	return(res)#
}#
meanPBS<-getMeanPBS(HA.HC,HA.HD,HA.HE,HC.HD,HC.HE,HD.HE,edges=edges)#
#
getPerm<-function(P1P2,P1P3,P1P4,P2P3,P2P4,P3P4,pis,edges,reps=10,k=10){#
	perms<-replicate(reps,{#
		shuf<-shuffle(length(pis),control=how(blocks=cut(pis,quantile(pis,seq(0,1,0.1),na.rm=T))))#
		getMeanPBS(P1P2[shuf,],P1P3[shuf,],P1P4[shuf,],P2P3[shuf,],P2P4[shuf,],P3P4[shuf,],k=k,edges=edges)#
	})#
	return(perms)#
}#
#
PBS<-data.frame(row.names=paste(HA.HC$chr,HA.HC$start,sep=':'),chr=HA.HC$chr)#
# PBS$chr<-factor(PBS$chr,levels=c(paste('chr',1:14,sep=''),'unplaced'))#
# PBS$chr[is.na(PBS$chr)]<-'unplaced'#
PBS$HA<-meanPBS[,1]#
PBS$HC<-meanPBS[,2]#
PBS$HD<-meanPBS[,3]#
PBS$HE<-meanPBS[,4]#
#
# perms<-getPerm(HA.HC,HA.HD,HA.HE,HC.HD,HC.HE,HD.HE, pis=meanPi,edges=edges,reps=10,k=10)#
# permHA<-perms[,1,]#
# permHC<-perms[,2,]#
# permHD<-perms[,3,]#
# permHE<-perms[,4,]#
# ecdf.HA<-ecdf(permHA)#
# ecdf.HC<-ecdf(permHC)#
# ecdf.HD<-ecdf(permHD)#
# ecdf.HE<-ecdf(permHE)#
# save(perms,permHA,permHC,permHD,permHE,ecdf.HA,ecdf.HC,ecdf.HD,ecdf.HE,file='perms_meanPBS.Rdata')#
#
load('perms_meanPBS.Rdata')#
#
outlpadjHA<-p.adjust(2*pmin((1-ecdf.HA(PBS$HA)),ecdf.HA(PBS$HA)),method='BH')#
outlpadjHC<-p.adjust(2*pmin((1-ecdf.HC(PBS$HC)),ecdf.HC(PBS$HC)),method='BH')#
outlpadjHD<-p.adjust(2*pmin((1-ecdf.HD(PBS$HD)),ecdf.HD(PBS$HD)),method='BH')#
outlpadjHE<-p.adjust(2*pmin((1-ecdf.HE(PBS$HE)),ecdf.HE(PBS$HE)),method='BH')#
#
PBS$chrcol<-c(grey(0.2),grey(0.6))[1+as.numeric(factor(PBS$chr,levels=unique(PBS$chr)))%%2]#
PBS$chrnum<-(as.numeric(gsub('chr','',PBS$chr)))#
PBS$chrcol[!is.na(PBS$chrnum)]<-c(grey(0.2),grey(0.6))[1+PBS$chrnum[!is.na(PBS$chrnum)]%%2]#
PBS$chrnum[is.na(PBS$chrnum)]<-15#
# PBS$chrcol[PBS$chr=='unplaced']<-grey(0.7)#
PBS$chrcolsave<-PBS$chrcol#
PBS$colchrom<-rainbow(11,v=0.8)[1+as.numeric(factor(HA.HC$chr))%%11]#
overplot<-which(outlpadjHE<0.05&PBS$HE>mean(PBS$HE,na.rm=T))#
PBS$chrcol[overplot]<-PBS$colchrom[overplot]#
PBS$chrcol[PBS$chrcol=='#CC6F00FF']<-'orange'#
PBS$chrcol[PBS$chrcol=='#00CC25FF']<-'magenta'#
PBS$chrlab<-PBS$chrnum#
PBS$chrlab[PBS$chrlab==15]<-'unplaced'#
PBS$start<-HA.HC$start#
#
PBS$HAcol=PBS$chrcolsave#
HAover<-which(outlpadjHA<0.05&PBS$HA>mean(PBS$HA,na.rm=T))#
PBS$HAcol[HAover]<-PBS$colchrom[HAover]#
PBS$HCcol=PBS$chrcolsave#
HCover<-which(outlpadjHC<0.05&PBS$HC>mean(PBS$HC,na.rm=T))#
PBS$HCcol[HCover]<-PBS$colchrom[HCover]#
PBS$HDcol=PBS$chrcolsave#
HDover<-which(outlpadjHD<0.05&PBS$HD>mean(PBS$HD,na.rm=T))#
PBS$HDcol[HDover]<-PBS$colchrom[HDover]#
PBS$HAoutl<-outlpadjHA<0.05&PBS$HA>mean(PBS$HA,na.rm=T)#
PBS$HCoutl<-outlpadjHC<0.05&PBS$HC>mean(PBS$HC,na.rm=T)#
PBS$HDoutl<-outlpadjHD<0.05&PBS$HD>mean(PBS$HD,na.rm=T)#
PBS$HEoutl<-outlpadjHE<0.05&PBS$HE>mean(PBS$HE,na.rm=T)#
#
HAwin<-t(sapply(winpos[HAover],function(v) c(strsplit(v,split=':')[[1]])))#
HAbed<-cbind(HAwin[,1],as.numeric(HAwin[,2])-50000,as.numeric(HAwin[,2])+50000)#
HCwin<-t(sapply(winpos[HCover],function(v) c(strsplit(v,split=':')[[1]])))#
HCbed<-cbind(HCwin[,1],as.numeric(HCwin[,2])-50000,as.numeric(HCwin[,2])+50000)#
HDwin<-t(sapply(winpos[HDover],function(v) c(strsplit(v,split=':')[[1]])))#
HDbed<-cbind(HDwin[,1],as.numeric(HDwin[,2])-50000,as.numeric(HDwin[,2])+50000)#
HEwin<-t(sapply(winpos[overplot],function(v) c(strsplit(v,split=':')[[1]])))#
HEbed<-cbind(HEwin[,1],as.numeric(HEwin[,2])-50000,as.numeric(HEwin[,2])+50000)#
write.table(HAbed,row.names=F,col.names=F,quote=F,file='HA_outlier_regions.bed',sep='\t')#
write.table(HCbed,row.names=F,col.names=F,quote=F,file='HC_outlier_regions.bed',sep='\t')#
write.table(HDbed,row.names=F,col.names=F,quote=F,file='HD_outlier_regions.bed',sep='\t')#
write.table(HEbed,row.names=F,col.names=F,quote=F,file='HE_outlier_regions.bed',sep='\t')#
#
plotPBS<-na.omit(PBS[order(PBS$chrnum),])#
plotPBS$HA[plotPBS$HA<0]<-0#
plotPBS$HC[plotPBS$HC<0]<-0#
plotPBS$HD[plotPBS$HD<0]<-0#
plotPBS$HE[plotPBS$HE<0]<-0#
#
HA.HE.dxy<-read.delim('HA.HE.dxy',header=F,na.strings='.')#
HA.HE.dxy[is.na(HA.HE.dxy[,4]),4]<-0#
rownames(HA.HE.dxy)<-paste(HA.HE.dxy[,1],HA.HE.dxy[,2],sep=':')#
HA.HE.dxy<-HA.HE.dxy[winpos,]#
#
HC.HE.dxy<-read.delim('HC.HE.dxy',header=F,na.strings='.')#
HC.HE.dxy[is.na(HC.HE.dxy[,4]),4]<-0#
rownames(HC.HE.dxy)<-paste(HC.HE.dxy[,1],HC.HE.dxy[,2],sep=':')#
HC.HE.dxy<-HC.HE.dxy[winpos,]#
#
HD.HE.dxy<-read.delim('HD.HE.dxy',header=F,na.strings='.')#
HD.HE.dxy[is.na(HD.HE.dxy[,4]),4]<-0#
rownames(HD.HE.dxy)<-paste(HD.HE.dxy[,1],HD.HE.dxy[,2],sep=':')#
HD.HE.dxy<-HD.HE.dxy[winpos,]#
#####################
#Figure 2          #
#####################
#
HA.HE.rolldxy<-rollapply(HA.HE.dxy[,4],FUN=sum,na.rm=T,width=10,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HA.rollpi<-rollapply(piHA$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HE.rollpi<-rollapply(piHE$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
nsites<-rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HA.HE.rollpi<-(HA.rollpi+HE.rollpi)/2#
#
HC.HE.rolldxy<-rollapply(HC.HE.dxy[,4],FUN=sum,na.rm=T,width=10,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HC.rollpi<-rollapply(piHC$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HE.rollpi<-rollapply(piHE$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HC.HE.rollpi<-(HC.rollpi+HE.rollpi)/2#
#
HD.HE.rolldxy<-rollapply(HD.HE.dxy[,4],FUN=sum,na.rm=T,width=10,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HD.rollpi<-rollapply(piHD$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HE.rollpi<-rollapply(piHE$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HD.HE.rollpi<-(HD.rollpi+HE.rollpi)/2#
#
png('../Figures/Figure2.png',width=5,height=10,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.3,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)#
#
dev.off()
options(stringsAsFactors=F)#
library(zoo)#
library(ape)#
library(pegas)#
library(data.table)#
library(permute)#
#
setwd('~/Dropbox (Princeton)/GradWork/114_coral_genomes/processed_data')#
#
amil<-read.delim('amil.picard')#
sum(amil$PF_HQ_ALIGNED_READS)#
mean(amil$PF_HQ_ERROR_RATE)#
altref<-read.delim('altref.picard')#
sum(altref$PF_HQ_ALIGNED_READS)#
mean(altref$PF_HQ_ERROR_RATE)#
#
admix<-read.delim('admix.qopt',header=F,sep=' ')[,-5]#
admix<-as.matrix(t(admix))#
samps<-read.delim('samps.txt',header=F)[,1]#
colnames(admix)<-samps#
species<-apply(admix,2,which.max)#
names(species)<-samps#
meta<-read.csv('meta.csv')#
meta$species<-species[match(meta$filename,names(species))]#
#
meta<-meta[order(meta$cryp),]#
admix<-admix[,match(meta$filename,colnames(admix))]#
admix<-admix[order(meta$cryp[apply(admix,1,which.max)]),]#
#
meta$cryp<-factor(meta$cryp)#
#
idx<-read.delim('all.idxstats.gz',header=T)#
csym<-idx[grep('c_sym',idx$chr),]#
ccov<-125*rowSums(csym[,3:116])/csym[,2]#
csym<-csym[ccov<2*median(ccov)&ccov>0.5*median(ccov),]#
cnorm<-125*colSums(csym[,3:116])/sum(csym[,2])#
#
dsym<-idx[grep('d_sym', idx$chr),]#
dcov<-125*rowSums(dsym[,3:116])/dsym[,2]#
dsym<-dsym[dcov<2*median(dcov)&dcov>0.5*median(dcov),]#
dnorm<-125*colSums(dsym[,3:116])/sum(dsym[,2])#
#
propd<-dnorm/(dnorm+cnorm)#
meta$propd<-propd[match(meta$filename ,gsub('X','',names(propd)))]#
#
meta$binsym<-'C'#
meta$binsym[meta$propd>0.5]<-'D'#
meta$pool<-factor(meta$pool)#
#
write.csv(meta,file='meta.csv',row.names=F,quote=F)#
#
glm.out1<-glm(binbl~pool+cryp+propd,data=meta,family='binomial')#
glm.out2<-glm(binbl~pool+propd,data=meta,family='binomial')#
#####################
#GENOMIC ANALYSES          #
#####################
#
HA.HC<-read.delim('HA.HC.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HA.HD<-read.delim('HA.HD.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HA.HE<-read.delim('HA.HE.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HC.HD<-read.delim('HC.HD.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HC.HE<-read.delim('HC.HE.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HD.HE<-read.delim('HD.HE.fst.components.txt',row.names=NULL,header=F,col.names=c('chr','start','stop','num','den','nSites'),na.strings='.')#
HA.HC$pos<-paste(HA.HC$chr,HA.HC$start,sep=':')#
HA.HD$pos<-paste(HA.HD$chr,HA.HD$start,sep=':')#
HA.HE$pos<-paste(HA.HE$chr,HA.HE$start,sep=':')#
HC.HD$pos<-paste(HC.HD$chr,HC.HD$start,sep=':')#
HC.HE$pos<-paste(HC.HE$chr,HC.HE$start,sep=':')#
HD.HE$pos<-paste(HD.HE$chr,HD.HE$start,sep=':')#
postab<-table(c(HA.HC$pos,HA.HD$pos,HA.HE$pos,HC.HD$pos,HC.HE$pos,HD.HE$pos))#
overlap<-names(postab[postab==6])#
HA.HC<-HA.HC[HA.HC$pos%in%overlap,]#
HA.HD<-HA.HD[HA.HD$pos%in%overlap,]#
HA.HE<-HA.HE[HA.HE$pos%in%overlap,]#
HC.HD<-HC.HD[HC.HD$pos%in%overlap,]#
HC.HE<-HC.HE[HC.HE$pos%in%overlap,]#
HD.HE<-HD.HE[HD.HE$pos%in%overlap,]#
winpos<-HA.HC$pos#
#
getPBS<-function(P1P2,P1P3,P1P4,P2P3,P2P4,P3P4){#
	TP1P2=-log(1-P1P2)#
	TP1P3=-log(1-P1P3)#
	TP1P4=-log(1-P1P4)#
	TP2P3=-log(1-P2P3)#
	TP2P4=-log(1-P2P4)#
	TP3P4=-log(1-P3P4)#
	P1=((TP1P2+TP1P3-TP2P3)+(TP1P2+TP1P4-TP2P4)+(TP1P3+TP1P4-TP3P4))/6#
	P2=((TP1P2+TP2P3-TP1P3)+(TP1P2+TP2P4-TP1P4)+(TP2P3+TP2P4-TP3P4))/6#
	P3=((TP1P3+TP2P3-TP1P2)+(TP1P3+TP3P4-TP1P4)+(TP2P3+TP3P4-TP2P4))/6#
	P4=((TP1P4+TP2P4-TP1P2)+(TP1P4+TP3P4-TP1P3)+(TP2P4+TP3P4-TP2P3))/6#
	return(cbind(P1,P2,P3,P4))#
}#
#
getTrees<-function(vec){#
	v<-(-log(1-vec))#
	dmat<-matrix(nrow=4,ncol=4)#
	colnames(dmat)<-c('HA','HC','HD','HE')#
	rownames(dmat)<-c('HA','HC','HD','HE')#
	dmat[lower.tri(dmat)]<-v#
	currdist<-as.dist(dmat)#
	nj.out<-bionj(currdist)#
	return(nj.out)#
}#
#
Fst10kb<-data.frame(row.names=winpos,HA.HC=HA.HC$num/HA.HC$den)#
Fst10kb$HA.HD<-HA.HD$num/HA.HD$den#
Fst10kb$HA.HE<-HA.HE$num/HA.HE$den#
Fst10kb$HC.HD<-HC.HD$num/HC.HD$den#
Fst10kb$HC.HE<-HC.HE$num/HC.HE$den#
Fst10kb$HD.HE<-HD.HE$num/HD.HE$den#
Fst10kb<-na.omit(Fst10kb)#
Fst10kb<-as.matrix(Fst10kb)#
trees<-apply(Fst10kb,1,getTrees)#
#
######################
#####################
#
#Figure S1#
#Table S2#
#
sns<-fread('snpfst_all_info.txt.gz')#
colnames(sns)<-c('SNP','maf','HA.HC','HA.HD','HA.HE','HC.HD','HC.HE','HD.HE','Eff','gene','nuc','prot','warn')#
sns$missense<-grepl('missense',sns$Eff)#
sns$chr<-gsub(':.*','',sns$SNP)#
sns$pos<-gsub('.*:','',sns$SNP)#
sns$maf<-round(sns$maf,2)#
#
table(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99,'gene'])#
table(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99&sns$missense,'gene'])#
dim(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99&sns$missense,'gene'])#
table(sns[sns$HA.HE>0.99&sns$HC.HE>0.99&sns$HD.HE>0.99,'chr'])#
#
snsPBS<-getPBS(sns$HA.HC,sns$HA.HD,sns$HA.HE,sns$HC.HD,sns$HC.HE,sns$HD.HE)#
sns$HA<-snsPBS[,1]#
sns$HC<-snsPBS[,2]#
sns$HD<-snsPBS[,3]#
sns$HE<-snsPBS[,4]#
#
s2<-sns[sns$missense&sns$HE>quantile(sns$HE,0.9),c(1:2,10:13,17:20)]#
write.table(s2,sep='\t',quote=F,row.names=F,file='../Tables/TableS2.txt')#
#
# shufs<-replicate(100,{#
# shuffle(nrow(sns),control=how(blocks=sns$maf))#
# })#
#
# HAperms90<-apply(shufs,2,function(x) table(sns$HA[x][which(sns$missense)]>quantile(sns$HA,0.9))[2])#
# HAobs90<-table(sns$HA[which(sns$missense)]>quantile(sns$HA,0.9))[2]#
# HAperms95<-apply(shufs,2,function(x) table(sns$HA[x][which(sns$missense)]>quantile(sns$HA,0.95))[2])#
# HAobs95<-table(sns$HA[which(sns$missense)]>quantile(sns$HA,0.95))[2]#
# HAperms99<-apply(shufs,2,function(x) table(sns$HA[x][which(sns$missense)]>quantile(sns$HA,0.99))[2])#
# HAobs99<-table(sns$HA[which(sns$missense)]>quantile(sns$HA,0.99))[2]#
#
# HCperms90<-apply(shufs,2,function(x) table(sns$HC[x][which(sns$missense)]>quantile(sns$HC,0.9))[2])#
# HCobs90<-table(sns$HC[which(sns$missense)]>quantile(sns$HC,0.9))[2]#
# HCperms95<-apply(shufs,2,function(x) table(sns$HC[x][which(sns$missense)]>quantile(sns$HC,0.95))[2])#
# HCobs95<-table(sns$HC[which(sns$missense)]>quantile(sns$HC,0.95))[2]#
# HCperms99<-apply(shufs,2,function(x) table(sns$HC[x][which(sns$missense)]>quantile(sns$HC,0.99))[2])#
# HCobs99<-table(sns$HC[which(sns$missense)]>quantile(sns$HC,0.99))[2]#
#
# HDperms90<-apply(shufs,2,function(x) table(sns$HD[x][which(sns$missense)]>quantile(sns$HD,0.9))[2])#
# HDobs90<-table(sns$HD[which(sns$missense)]>quantile(sns$HD,0.9))[2]#
# HDperms95<-apply(shufs,2,function(x) table(sns$HD[x][which(sns$missense)]>quantile(sns$HD,0.95))[2])#
# HDobs95<-table(sns$HD[which(sns$missense)]>quantile(sns$HD,0.95))[2]#
# HDperms99<-apply(shufs,2,function(x) table(sns$HD[x][which(sns$missense)]>quantile(sns$HD,0.99))[2])#
# HDobs99<-table(sns$HD[which(sns$missense)]>quantile(sns$HD,0.99))[2]#
#
# HEperms90<-apply(shufs,2,function(x) table(sns$HE[x][which(sns$missense)]>quantile(sns$HE,0.9))[2])#
# HEobs90<-table(sns$HE[which(sns$missense)]>quantile(sns$HE,0.9))[2]#
# HEperms95<-apply(shufs,2,function(x) table(sns$HE[x][which(sns$missense)]>quantile(sns$HE,0.95))[2])#
# HEobs95<-table(sns$HE[which(sns$missense)]>quantile(sns$HE,0.95))[2]#
# HEperms99<-apply(shufs,2,function(x) table(sns$HE[x][which(sns$missense)]>quantile(sns$HE,0.99))[2])#
# HEobs99<-table(sns$HE[which(sns$missense)]>quantile(sns$HE,0.99))[2]#
#
# sns$loc1<-(sns$chr=='chr7'&sns$pos> 20350000&sns$pos<20570000)#
# sns$loc2<-(sns$chr=='Sc0000015'&sns$pos> 2380000&sns$pos<2580000)#
# sns2<-sns[sns$loc1==F & sns$loc2==F,]#
#
# shufs2<-replicate(100,{#
# shuffle(nrow(sns2),control=how(blocks=sns2$maf))#
# })#
#
# HEperms90_2<-apply(shufs2,2,function(x) table(sns2$HE[x][which(sns2$missense)]>quantile(sns2$HE,0.9))[2])#
# HEobs90_2<-table(sns2$HE[which(sns2$missense)]>quantile(sns2$HE,0.9))[2]#
# HEperms95_2<-apply(shufs2,2,function(x) table(sns2$HE[x][which(sns2$missense)]>quantile(sns2$HE,0.95))[2])#
# HEobs95_2<-table(sns2$HE[which(sns2$missense)]>quantile(sns2$HE,0.95))[2]#
# HEperms99_2<-apply(shufs2,2,function(x) table(sns2$HE[x][which(sns2$missense)]>quantile(sns2$HE,0.99))[2])#
# HEobs99_2<-table(sns2$HE[which(sns2$missense)]>quantile(sns2$HE,0.99))[2]#
# save(shufs,shufs2,HAperms90,HAperms95,HAperms99,HAobs90,HAobs95,HAobs99,#
# HCperms90,HCperms95,HCperms99,HCobs90,HCobs95,HCobs99,#
# HDperms90,HDperms95,HDperms99,HDobs90,HDobs95,HDobs99,#
# HEperms90,HEperms95,HEperms99,HEobs90,HEobs95,HEobs99,#
# HEperms90_2,HEperms95_2,HEperms99_2,HEobs90_2,HEobs95_2,HEobs99_2,#
# file='sns_perms.Rdata')#
#
getP<-function(perms,obs){#
	currp<-(min(length(which(perms>obs)),length(which(perms<obs)))*2)/length(perms)#
	if(currp==0) return(paste0('P<',1/length(perms)))#
	return(paste0('P=',currp))#
}#
#
load('sns_perms.Rdata')#
#
png('../Figures/FigureS2.png',width=8,height=6,res=300,units='in')#
layout(rbind(c(1,2,2,2,2),c(3,4,5,6,7),c(8,9,10,11,12),c(13,14,15,16,17)))#
par(mar=c(3,3,1,1),mgp=c(1.5,0.2,0),bty='n',tck=-0.01,oma=c(0,1,0,0),cex.main=1)#
#
plot(density(sns$maf[sns$missense]),col='red',main='',xlab='MAF')#
lines(density(sns$maf[!sns$missense]))#
legend('top',fill=c('black','red'),legend=c('synonymous','nonsynonymous'),bty='n',cex=0.7)#
title('A',adj=0,cex.main=1.5)#
#
snsPlot<-sns[sns$missense&sns$HE>0.1,]#
snsPlot$col<-c(grey(0.2),grey(0.6))[1+as.numeric(factor(snsPlot$chr,levels=unique(snsPlot$chr)))%%2]#
snsPlot$col[snsPlot$HE>quantile(sns$HE,0.9)]<-'tomato4'#
snsPlot$col[snsPlot$HE>quantile(sns$HE,0.95)]<-'red4'#
snsPlot$col[snsPlot$HE>quantile(sns$HE,0.99)]<-'red1'#
plot(snsPlot$HE,cex=0.2,xlab='Nonsynonymous SNPs',ylab='HE PBS',col=snsPlot$col,xlim=c(0,130000))#
title('B',adj=0,cex.main=1.5)#
legend('topright',fill=c('tomato4','red4','red1'),legend=c('top 10%','top 5%','top 1%'),bty='n',cex=0.7)#
#
hist(HAperms90,col='grey',xlab='',ylab='Counts',xlim=c(50000,55000),main='HA',breaks=6)#
abline(v=HAobs90,col='red')#
title(main=getP(HAperms90,HAobs90),font.main=1,cex.main=0.8,adj=0.3,line=-1)#
title('C',adj=0,cex.main=1.5)#
mtext('top 10%',side=2,las=3,line=2.5)#
hist(HCperms90,col='grey',xlab='',ylab='',xlim=c(50000,55000),main='HC',breaks=6)#
abline(v=HCobs90,col='red')#
title(main=getP(HCperms90,HCobs90),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
hist(HDperms90,col='grey',xlab='',ylab='',xlim=c(50000,55000),main='HD',breaks=6)#
abline(v=HDobs90,col='red')#
title(main=getP(HDperms90,HDobs90),font.main=1,cex.main=0.8,adj=0.08,line=-1)#
hist(HEperms90,col='grey',xlab='',ylab='',xlim=c(50000,55000),main='HE',breaks=6)#
abline(v=HEobs90,col='red')#
title(main=getP(HEperms90,HEobs90),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
hist(HEperms90_2,col='grey',xlab='',ylab='Counts',xlim=c(50000,55000),main='HE (no L1,L2)',breaks=6)#
abline(v=HEobs90_2,col='red')#
title(main=getP(HEperms90_2,HEobs90_2),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
#
hist(HAperms95,col='grey',xlab='',ylab='Counts',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HAobs95,col='red')#
title(main=getP(HAperms95,HAobs95),font.main=1,cex.main=0.8,adj=0.4,line=-1)#
mtext('top 5%',side=2,las=3,line=2.5)#
hist(HCperms95,col='grey',xlab='',ylab='',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HCobs95,col='red')#
title(main=getP(HCperms95,HCobs95),font.main=1,cex.main=0.8,adj=0.2,line=-1)#
hist(HDperms95,col='grey',xlab='',ylab='',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HDobs95,col='red')#
title(main=getP(HDperms95,HDobs95),font.main=1,cex.main=0.8,adj=0.08,line=-1)#
hist(HEperms95,col='grey',xlab='',ylab='',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HEobs95,col='red')#
title(main=getP(HEperms95,HEobs95),font.main=1,cex.main=0.8,adj=0.1,line=-1)#
hist(HEperms95_2,col='grey',xlab='',ylab='Counts',xlim=c(24500,27500),main='',breaks=6)#
abline(v=HEobs95_2,col='red')#
title(main=getP(HEperms95_2,HEobs95_2),font.main=1,cex.main=0.8,adj=0.1,line=-1)#
#
hist(HAperms99,col='grey',xlab='Nonsynonymous outliers',ylab='Counts',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HAobs99,col='red')#
title(main=getP(HAperms99,HAobs99),font.main=1,cex.main=0.8,adj=0.1,line=-1)#
mtext('top 1%',side=2,las=3,line=2.5)#
hist(HCperms99,col='grey',xlab='Nonsynonymous outliers',ylab='',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HCobs99,col='red')#
title(main=getP(HCperms99,HCobs99),font.main=1,cex.main=0.8,adj=0.9,line=-1)#
hist(HDperms99,col='grey',xlab='Nonsynonymous outliers',ylab='',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HDobs99,col='red')#
title(main=getP(HDperms99,HDobs99),font.main=1,cex.main=0.8,adj=0.08,line=-1)#
hist(HEperms99,col='grey',xlab='Nonsynonymous outliers',ylab='',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HEobs99,col='red')#
title(main=getP(HEperms99,HEobs99),font.main=1,cex.main=0.8,adj=0.8,line=-1)#
hist(HEperms99_2,col='grey',xlab='Nonsynonymous outliers',ylab='Counts',xlim=c(4500,6000),main='',breaks=6)#
abline(v=HEobs99_2,col='red')#
title(main=getP(HEperms99_2,HEobs99_2),font.main=1,cex.main=0.8,adj=0.8,line=-1)#
dev.off()#
#
g1<-sns[sns$gene=='Amillepora12599',]#
fisher.test(g1$HA.HE>0.99&g1$HC.HE>0.99&g1$HD.HE>0.99,g1$missense)#
g2<-sns[sns$gene=='Amillepora12602',]#
fisher.test(g2$HA.HE>0.99&g2$HC.HE>0.99&g2$HD.HE>0.99,g2$missense)#
l1<-sns[sns$loc1,]#
fisher.test(g2$HA.HE>0.99&g2$HC.HE>0.99&g2$HD.HE>0.99,g2$missense)#
#
##########################
####################
#####################
#
#############
#Figure 1#
##############
#
png('../Figures/Figure1.png',width=6,height=6,res=300,units='in')#
layout(rbind(c(1,1,1),c(2,3,4),c(5,6,7)))#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,cex=0.5,bty='l',cex.main=1.5)#
#
crypcol= rainbow(100,v=0.8)[c(18,5,50,80)]#
crypcols= crypcol[factor(meta$cryp)]#
#
#A#
bp<-barplot(admix,col=crypcol,names.arg=rep('',ncol(admix)),las=1,ylab='Proportion ancestry')#
mtext('HA',side=1,line=1,at=bp[7])#
mtext('HC',side=1,line=1,at=bp[25])#
mtext('HD',side=1,line=1,at=bp[50])#
mtext('HE',side=1,line=1,at=bp[90])#
title('A',adj=0)#
#
#B#
#
covmat<-as.matrix(read.delim('pcangsd.cov',header=F))#
colnames(covmat)<-samps#
rownames(covmat)<-samps#
covmat<-covmat[match(meta$filename,rownames(covmat)),match(meta$filename,colnames(covmat))]#
e<-eigen(covmat)#
plot(e$vectors[,1],e$vectors[,2],col=crypcols,xlab='PC 1',ylab='PC 2')#
title('B',adj=0)#
#
#C#
#
globalfst<-read.delim('global_fst.txt',header=F,sep=' ')#
globaltree<-getTrees(globalfst[,2])#
globaltree$tip.label<-c('HA','HC','HD','HE')#
plot(globaltree,type='u',cex=1, edge.width=2,lab4ut='axial') #
segments(.05,0,.1,0,lwd=2)#
text(0.075,0.01,label=expression(italic(T) == 0.05))#
title('C',adj=0)#
#
#D#
plotperm<-data.frame(perms=c(HAperms90,HCperms90,HDperms90,HEperms90),ind=c(rep(1,100),rep(2,100),rep(3,100),rep(4,100)))#
plot(jitter(plotperm$ind,0.3),plotperm$perms,cex=1,ylim=c(50000,55500),lwd=0.5,col='grey',xlab='Species',ylab=expression('Nonsynonymous outliers x'~10^3),axes=F,xlim=c(0.4,4.5))#
axis(1,at=1:4,labels=c('HA','HC','HD','HE'))#
axis(2,at=c(50000,52000,54000),labels=c(50,52,54))#
points(1:4,c(HAobs90,HCobs90,HDobs90,HEobs90),cex=1,col='red',pch=19)#
box(bty='l')#
legend('topright',fill=c('grey','red'),legend=c('permuted','observed'),bty='n')#
title('D',adj=0)#
#
#E#
seq<-ape::read.dna('ahy_mitosnps.fa',format='fasta')#
meta2<-meta[match(labels(seq),meta$filename),]#
table(labels(seq)==meta2$filename)#
d<-dist.dna(seq)#
hc<-(hclust(d))#
cut<-cutree(hc,k=2)#
meta$mitotype<-cut[match(meta$filename,meta2$filename)]#
#
h<-pegas::haplotype(seq)#
h<-sort(h,what='label')#
labs=labels(h)#
l<-rep(NA,nrow(seq))#
for(i in 1:length(labs)){#
	l[attr(h,'index')[[i]]]<-labs[i]#
}#
sp=table(l,meta2$cryp)#
net<-pegas::haploNet(h)#
table(attr(net,'labels')==rownames(sp))#
attr(net,'alter.links')<-NULL#
#
plot(net,size=attr(net,'freq')**.5,pie=sp,show.mutation=2,scale.ratio=1,fast=F,labels=F,bg=crypcol)#
legend('topleft',legend=c('HA','HC','HD','HE'),fill=crypcol,bty='n')#
title('E',adj=0)#
par(xpd=F)#
text(0,-10,label='HG1')#
text(30,-10,label='HG2')#
#F#
plot(jitter(as.numeric(factor(meta$cryp))),meta$propd,axes=F,xlab='Species',ylab=expression(paste("Proportion",italic(" Durusdinium")," symbionts")),type='n',cex=1,ylim=c(0,1),las=1,cex.axis=1)#
axis(1,at=1:4,labels=c('HA','HC','HD','HE'))#
axis(2)#
box(bty='l')#
abline(h=0.5,lwd=2,lty=2)#
points(jitter(as.numeric(factor(meta$cryp))),meta$propd,col=crypcols,cex=1)#
#
title('F',adj=0)#
#G#
bl<-table(meta$binbl,interaction(meta$cryp,meta$propd>0.5))#
bltab<-matrix(0,5,8)#
bltab[5,]<-bl[2,]#
bltab[1,c(1,5)]<-bl[1,c(1,5)]#
bltab[2,c(2,6)]<-bl[1,c(2,6)]#
bltab[3,c(3,7)]<-bl[1,c(3,7)]#
bltab[4,c(4,8)]<-bl[1,c(4,8)]#
bp<-barplot(bltab,col=c(crypcol,grey(0.95)),names.arg=c('HA','HC','HD','HE','HA','HC','HD','HE'),cex.names=1,ylab='Count',las=2)#
mtext('Sym. C',at=mean(bp[2:3]),side=1,las=1,line=1.5,cex=0.7)#
mtext('Sym. D',at=mean(bp[6:7]),side=1,las=1,line=1.5,cex=0.7)#
legend('topleft',fill=grey(0.95),legend='bleached',bty='n')#
title('G',adj=0)#
dev.off()#
##############
#
goodcov<-read.delim('good_coverage.txt',na.strings='.',header=F)#
rownames(goodcov)<-paste(goodcov[,1],goodcov[,2],sep=':')#
goodcov<-goodcov[winpos,]#
repeatcov<-read.delim('repeat_coverage.bed',na.strings='.',header=F)#
rownames(repeatcov)<-paste(repeatcov[,1],repeatcov[,2],sep=':')#
repeatcov<-repeatcov[winpos,]#
cor.test(repeatcov[,7],goodcov[,7])#
#
piHA<-read.delim('HA.pestPG')#
piHA$winpos<-paste(piHA$Chr,piHA$WinCenter-5000,sep=':')#
piHA<-piHA[match(winpos,piHA$winpos),]#
piHC<-read.delim('HC.pestPG')#
piHC$winpos<-paste(piHC$Chr,piHC$WinCenter-5000,sep=':')#
piHC<-piHC[match(winpos,piHC$winpos),]#
piHD<-read.delim('HD.pestPG')#
piHD$winpos<-paste(piHD$Chr,piHD$WinCenter-5000,sep=':')#
piHD<-piHD[match(winpos,piHD$winpos),]#
piHE<-read.delim('HE.pestPG')#
piHE$winpos<-paste(piHE$Chr,piHE$WinCenter-5000,sep=':')#
piHE<-piHE[match(winpos,piHE$winpos),]#
#
meanPi<-(piHA$tP/goodcov[,4]+piHC$tP/goodcov[,4]+piHD$tP/goodcov[,4]+piHE$tP/goodcov[,4])/4#
#
edges<-c()#
for(chr in unique(HA.HE$chr)){#
	curr<-which(HA.HE$chr==chr)#
	if(length(curr)<10){#
		edges<-c(edges,curr)#
		next#
	}#
	edges<-c(edges,curr[1:5],curr[(length(curr)-4):length(curr)])#
}#
#
getPBSwin<-function(focal.ref,focal.out,ref.out,k=10,edges){#
	T1=-log(1-rollapply(focal.ref$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(focal.ref$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	T2=-log(1-rollapply(focal.out $num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(focal.out $den,FUN=mean,width=k,na.rm=T, fill=NA))#
	T3=-log(1-rollapply(ref.out $num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(ref.out $den,FUN=mean,width=k,na.rm=T, fill=NA))#
	PBS=(T1+T2-T3)/2#
	PBS[edges]<-NA#
	return(PBS)#
}#
# P1P2=HA.HC#
# P1P3=HA.HD#
# P1P4=HA.HE#
# P2P3=HC.HD#
# P2P4=HC.HE#
# P3P4=HD.HE#
#
getMeanPBS<-function(P1P2,P1P3,P1P4,P2P3,P2P4,P3P4,k=10,edges,remove.edges=T){#
	TP1P2=-log(1-rollapply(P1P2$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P1P2$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP1P3=-log(1-rollapply(P1P3$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P1P3$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP1P4=-log(1-rollapply(P1P4$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P1P4$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP2P3=-log(1-rollapply(P2P3$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P2P3$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP2P4=-log(1-rollapply(P2P4$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P2P4$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	TP3P4=-log(1-rollapply(P3P4$num,FUN=mean,width=k,na.rm=T,fill=NA)/rollapply(P3P4$den,FUN=mean,width=k,na.rm=T, fill=NA))#
	P1=((TP1P2+TP1P3-TP2P3)+(TP1P2+TP1P4-TP2P4)+(TP1P3+TP1P4-TP3P4))/6#
	P2=((TP1P2+TP2P3-TP1P3)+(TP1P2+TP2P4-TP1P4)+(TP2P3+TP2P4-TP3P4))/6#
	P3=((TP1P3+TP2P3-TP1P2)+(TP1P3+TP3P4-TP1P4)+(TP2P3+TP3P4-TP2P4))/6#
	P4=((TP1P4+TP2P4-TP1P2)+(TP1P4+TP3P4-TP1P3)+(TP2P4+TP3P4-TP2P3))/6#
	res<-as.data.frame(cbind(P1,P2,P3,P4))#
	if(remove.edges) res[edges,]<-NA#
	return(res)#
}#
meanPBS<-getMeanPBS(HA.HC,HA.HD,HA.HE,HC.HD,HC.HE,HD.HE,edges=edges)#
#
getPerm<-function(P1P2,P1P3,P1P4,P2P3,P2P4,P3P4,pis,edges,reps=10,k=10){#
	perms<-replicate(reps,{#
		shuf<-shuffle(length(pis),control=how(blocks=cut(pis,quantile(pis,seq(0,1,0.1),na.rm=T))))#
		getMeanPBS(P1P2[shuf,],P1P3[shuf,],P1P4[shuf,],P2P3[shuf,],P2P4[shuf,],P3P4[shuf,],k=k,edges=edges)#
	})#
	return(perms)#
}#
#
PBS<-data.frame(row.names=paste(HA.HC$chr,HA.HC$start,sep=':'),chr=HA.HC$chr)#
# PBS$chr<-factor(PBS$chr,levels=c(paste('chr',1:14,sep=''),'unplaced'))#
# PBS$chr[is.na(PBS$chr)]<-'unplaced'#
PBS$HA<-meanPBS[,1]#
PBS$HC<-meanPBS[,2]#
PBS$HD<-meanPBS[,3]#
PBS$HE<-meanPBS[,4]#
#
# perms<-getPerm(HA.HC,HA.HD,HA.HE,HC.HD,HC.HE,HD.HE, pis=meanPi,edges=edges,reps=10,k=10)#
# permHA<-perms[,1,]#
# permHC<-perms[,2,]#
# permHD<-perms[,3,]#
# permHE<-perms[,4,]#
# ecdf.HA<-ecdf(permHA)#
# ecdf.HC<-ecdf(permHC)#
# ecdf.HD<-ecdf(permHD)#
# ecdf.HE<-ecdf(permHE)#
# save(perms,permHA,permHC,permHD,permHE,ecdf.HA,ecdf.HC,ecdf.HD,ecdf.HE,file='perms_meanPBS.Rdata')#
#
load('perms_meanPBS.Rdata')#
#
outlpadjHA<-p.adjust(2*pmin((1-ecdf.HA(PBS$HA)),ecdf.HA(PBS$HA)),method='BH')#
outlpadjHC<-p.adjust(2*pmin((1-ecdf.HC(PBS$HC)),ecdf.HC(PBS$HC)),method='BH')#
outlpadjHD<-p.adjust(2*pmin((1-ecdf.HD(PBS$HD)),ecdf.HD(PBS$HD)),method='BH')#
outlpadjHE<-p.adjust(2*pmin((1-ecdf.HE(PBS$HE)),ecdf.HE(PBS$HE)),method='BH')#
#
PBS$chrcol<-c(grey(0.2),grey(0.6))[1+as.numeric(factor(PBS$chr,levels=unique(PBS$chr)))%%2]#
PBS$chrnum<-(as.numeric(gsub('chr','',PBS$chr)))#
PBS$chrcol[!is.na(PBS$chrnum)]<-c(grey(0.2),grey(0.6))[1+PBS$chrnum[!is.na(PBS$chrnum)]%%2]#
PBS$chrnum[is.na(PBS$chrnum)]<-15#
# PBS$chrcol[PBS$chr=='unplaced']<-grey(0.7)#
PBS$chrcolsave<-PBS$chrcol#
PBS$colchrom<-rainbow(11,v=0.8)[1+as.numeric(factor(HA.HC$chr))%%11]#
overplot<-which(outlpadjHE<0.05&PBS$HE>mean(PBS$HE,na.rm=T))#
PBS$chrcol[overplot]<-PBS$colchrom[overplot]#
PBS$chrcol[PBS$chrcol=='#CC6F00FF']<-'orange'#
PBS$chrcol[PBS$chrcol=='#00CC25FF']<-'magenta'#
PBS$chrlab<-PBS$chrnum#
PBS$chrlab[PBS$chrlab==15]<-'unplaced'#
PBS$start<-HA.HC$start#
#
PBS$HAcol=PBS$chrcolsave#
HAover<-which(outlpadjHA<0.05&PBS$HA>mean(PBS$HA,na.rm=T))#
PBS$HAcol[HAover]<-PBS$colchrom[HAover]#
PBS$HCcol=PBS$chrcolsave#
HCover<-which(outlpadjHC<0.05&PBS$HC>mean(PBS$HC,na.rm=T))#
PBS$HCcol[HCover]<-PBS$colchrom[HCover]#
PBS$HDcol=PBS$chrcolsave#
HDover<-which(outlpadjHD<0.05&PBS$HD>mean(PBS$HD,na.rm=T))#
PBS$HDcol[HDover]<-PBS$colchrom[HDover]#
PBS$HAoutl<-outlpadjHA<0.05&PBS$HA>mean(PBS$HA,na.rm=T)#
PBS$HCoutl<-outlpadjHC<0.05&PBS$HC>mean(PBS$HC,na.rm=T)#
PBS$HDoutl<-outlpadjHD<0.05&PBS$HD>mean(PBS$HD,na.rm=T)#
PBS$HEoutl<-outlpadjHE<0.05&PBS$HE>mean(PBS$HE,na.rm=T)#
#
HAwin<-t(sapply(winpos[HAover],function(v) c(strsplit(v,split=':')[[1]])))#
HAbed<-cbind(HAwin[,1],as.numeric(HAwin[,2])-50000,as.numeric(HAwin[,2])+50000)#
HCwin<-t(sapply(winpos[HCover],function(v) c(strsplit(v,split=':')[[1]])))#
HCbed<-cbind(HCwin[,1],as.numeric(HCwin[,2])-50000,as.numeric(HCwin[,2])+50000)#
HDwin<-t(sapply(winpos[HDover],function(v) c(strsplit(v,split=':')[[1]])))#
HDbed<-cbind(HDwin[,1],as.numeric(HDwin[,2])-50000,as.numeric(HDwin[,2])+50000)#
HEwin<-t(sapply(winpos[overplot],function(v) c(strsplit(v,split=':')[[1]])))#
HEbed<-cbind(HEwin[,1],as.numeric(HEwin[,2])-50000,as.numeric(HEwin[,2])+50000)#
write.table(HAbed,row.names=F,col.names=F,quote=F,file='HA_outlier_regions.bed',sep='\t')#
write.table(HCbed,row.names=F,col.names=F,quote=F,file='HC_outlier_regions.bed',sep='\t')#
write.table(HDbed,row.names=F,col.names=F,quote=F,file='HD_outlier_regions.bed',sep='\t')#
write.table(HEbed,row.names=F,col.names=F,quote=F,file='HE_outlier_regions.bed',sep='\t')#
#
plotPBS<-na.omit(PBS[order(PBS$chrnum),])#
plotPBS$HA[plotPBS$HA<0]<-0#
plotPBS$HC[plotPBS$HC<0]<-0#
plotPBS$HD[plotPBS$HD<0]<-0#
plotPBS$HE[plotPBS$HE<0]<-0#
#
HA.HE.dxy<-read.delim('HA.HE.dxy',header=F,na.strings='.')#
HA.HE.dxy[is.na(HA.HE.dxy[,4]),4]<-0#
rownames(HA.HE.dxy)<-paste(HA.HE.dxy[,1],HA.HE.dxy[,2],sep=':')#
HA.HE.dxy<-HA.HE.dxy[winpos,]#
#
HC.HE.dxy<-read.delim('HC.HE.dxy',header=F,na.strings='.')#
HC.HE.dxy[is.na(HC.HE.dxy[,4]),4]<-0#
rownames(HC.HE.dxy)<-paste(HC.HE.dxy[,1],HC.HE.dxy[,2],sep=':')#
HC.HE.dxy<-HC.HE.dxy[winpos,]#
#
HD.HE.dxy<-read.delim('HD.HE.dxy',header=F,na.strings='.')#
HD.HE.dxy[is.na(HD.HE.dxy[,4]),4]<-0#
rownames(HD.HE.dxy)<-paste(HD.HE.dxy[,1],HD.HE.dxy[,2],sep=':')#
HD.HE.dxy<-HD.HE.dxy[winpos,]#
#####################
#Figure 2          #
#####################
#
HA.HE.rolldxy<-rollapply(HA.HE.dxy[,4],FUN=sum,na.rm=T,width=10,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HA.rollpi<-rollapply(piHA$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HE.rollpi<-rollapply(piHE$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
nsites<-rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HA.HE.rollpi<-(HA.rollpi+HE.rollpi)/2#
#
HC.HE.rolldxy<-rollapply(HC.HE.dxy[,4],FUN=sum,na.rm=T,width=10,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HC.rollpi<-rollapply(piHC$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HE.rollpi<-rollapply(piHE$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HC.HE.rollpi<-(HC.rollpi+HE.rollpi)/2#
#
HD.HE.rolldxy<-rollapply(HD.HE.dxy[,4],FUN=sum,na.rm=T,width=10,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HD.rollpi<-rollapply(piHD$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HE.rollpi<-rollapply(piHE$tP,width=10,FUN=sum,na.rm=T,fill=NA)/rollapply(goodcov[,4],FUN=sum,na.rm=T,width=10,fill=NA)#
HD.HE.rollpi<-(HD.rollpi+HE.rollpi)/2#
#
png('../Figures/Figure2.png',width=5,height=10,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.3,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)#
#
dev.off()
png('../Figures/Figure2.png',width=8,height=6,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.3,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)#
#
dev.off()
png('../Figures/Figure2.png',width=5,height=6,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.3,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)
png('../Figures/Figure2.png',width=5,height=6,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.5,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)#
#
dev.off()
png('../Figures/Figure2.png',width=5,height=10,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.3,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)#
#
dev.off()
png('../Figures/Figure2.png',width=8,height=10,res=300,units='in')#
par(mar=c(3,3,2,1),mgp=c(1.7,0.1,0),las=1,tck=0.01,cex.axis=1,lwd=1,bty='l',mfrow=c(5,1))#
layout(mat=matrix(data=1:5,nrow=5,ncol=1),heights=c(1,rep(0.3,4)))#
plot(plotPBS$HE,col=plotPBS$chrcol,ylab='HE PBS',xlab='',axes=F,cex=0.5,ylim=c(0,1.8))#
axis(2)#
chrlab<-aggregate((1:nrow(plotPBS))~plotPBS$chrnum,FUN=mean)#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('A',adj=0)#
text(19600,1.8,labels='HES1')#
text(34100,1.18,labels='HES2')#
#
overplots<-1:nrow(PBS)%in%overplot#
names(overplots)<-rownames(PBS)#
over2<-which(overplots[rownames(plotPBS)])#
#
plot(HA.rollpi[match(rownames(plotPBS),piHA$winpos)],col=plotPBS$chrcol,ylab=expression(HA~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HA.rollpi[match(rownames(plotPBS),piHA$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('B',adj=0)#
#
plot(HC.rollpi[match(rownames(plotPBS),piHC$winpos)],col=plotPBS$chrcol,ylab=expression(HC~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HC.rollpi[match(rownames(plotPBS),piHC$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('C',adj=0)#
#
plot(HD.rollpi[match(rownames(plotPBS),piHD$winpos)],col=plotPBS$chrcol,ylab=expression(HD~pi[w]),xlab='',axes=F,cex=0.5)#
axis(2)#
points(over2,HD.rollpi[match(rownames(plotPBS),piHD$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('D',adj=0)#
#
plot(HE.rollpi[match(rownames(plotPBS),piHE$winpos)],col=plotPBS$chrcol,ylab=expression(HE~pi[w]), xlab='Genomic position (100 kb window, 10 kb step)',cex=0.5,axes=F)#
axis(2)#
points(over2,HE.rollpi[match(rownames(plotPBS),piHE$winpos)][over2],col=plotPBS$chrcol[over2])#
axis(1,labels=c(1:14,'unplaced'),at=chrlab[,2],lwd=0)#
title('E',adj=0)#
#
# plot(HA.HE.rolldxy[nsites>50000],HA.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HA~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HA.HE.rolldxy[overplot],HA.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('B',adj=0)#
#
# plot(HC.HE.rolldxy[nsites>50000],HC.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HC~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HC.HE.rolldxy[overplot],HC.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('C',adj=0)#
#
# plot(HD.HE.rolldxy[nsites>50000],HD.HE.rollpi[nsites>50000],col=PBS$chrcol[nsites>50000],cex=0.5,xlab=expression(HD~vs.~HE~pi[b]),ylab=expression(pi[w]))#
# points(HD.HE.rolldxy[overplot],HD.HE.rollpi[overplot],col=PBS$chrcol[overplot],cex=0.5)#
# title('D',adj=0)#
#
dev.off()
